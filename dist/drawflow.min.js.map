{"version":3,"sources":["webpack://Drawflow/webpack/universalModuleDefinition","webpack://Drawflow/webpack/bootstrap","webpack://Drawflow/webpack/runtime/define property getters","webpack://Drawflow/webpack/runtime/hasOwnProperty shorthand","webpack://Drawflow/./src/drawflow.js"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Drawflow","container","render","events","precanvas","nodeId","ele_selected","node_selected","drag","reroute","reroute_fix_curvature","curvature","reroute_curvature_start_end","reroute_curvature","reroute_width","drag_point","editor_selected","connection","connection_ele","connection_selected","canvas_x","canvas_y","pos_x","pos_x_start","pos_y","pos_y_start","mouse_x","mouse_y","line_path","first_click","force_first_input","draggable_inputs","useuuid","checkInOutType","singleConnectionForTypedInput","select_elements","noderegister","drawflow","editor_mode","zoom","zoom_max","zoom_min","zoom_value","zoom_last_value","evCache","prevDiff","classList","add","tabIndex","document","createElement","appendChild","addEventListener","dragEnd","bind","position","click","contextmenu","zoom_enter","updateNodeValue","dblclick","onpointerdown","pointerdown_handler","onpointermove","pointermove_handler","onpointerup","pointerup_handler","onpointercancel","onpointerout","onpointerleave","load","ev","push","i","length","pointerId","curDiff","Math","abs","clientX","zoom_in","zoom_out","remove_event","splice","data","addNodeImport","addRerouteImport","updateConnectionNodes","editor","number","keys","map","moduleName","index","id","index2","parseInt","dispatch","parentElement","querySelectorAll","forEach","item","remove","e","target","closest","matches","preventDefault","button","contextmenuDel","removeReouteConnectionSelected","slice","tagName","hasAttribute","drawConnection","listclassConnection","output_id","input_id","output_class","input_class","removeNodeId","removeConnection","type","touches","clientY","e_pos_x","e_pos_y","updateConnection","x","y","style","transform","clientWidth","clientHeight","top","offsetTop","left","offsetLeft","getBoundingClientRect","setAttributeNS","nodeUpdate","nodeUpdateIn","numberPointPosition","Array","from","children","indexOf","searchConnection","outputs","connections","findIndex","node","output","points","parentSelected","ele_last","elementFromPoint","getNodeFromId","inputs","id_input","id_output","checkConnectionTypes","alreadyLinked","console","log","setAttribute","querySelector","contains","input","getElementsByClassName","deletebox","innerHTML","metaKey","event","delta","ctrlKey","deltaY","zoom_refresh","start_pos_x","start_pos_y","end_pos_x","end_pos_y","curvature_value","line_x","line_y","hx1","hx2","ele","createElementNS","path","eX","eY","precanvasWitdhZoom","precanvasHeightZoom","offsetWidth","offsetHeight","lineCurve","createCurvature","nodeOneModule","getModuleFromNodeId","dataNode","exist","checkOutput","connectionSearch","toString","idSearch","idSearchOut","rerouteWidth","elemsOut","elemtsearchId_out","id_search","replace","elemtsearch","elemtsearchOut","linecurve","reoute_fix","lineCurveSearch","elemtsearchId","elemtsearchIn","itempath","elems","elemtsearchId_in","createReroutePoint","removeReroutePoint","close","point","position_add_array_point","numberPoints","insertBefore","search_point","undefined","numberMainPath","name","html","props","options","JSON","parse","stringify","nodes","inputsData","outputsData","ele_pos_x","ele_pos_y","classoverride","nodeContents","typenode","newNodeId","getUuid","parent","nodeHeader","header","nodeContent","json_inputs","inputData","label","inputLabel","json_outputs","outputData","outputLabel","content","cloneNode","version","createApp","h","mount","wrapper","$mount","$el","insertObjectkeys","object","completname","objectData","entries","value","nodeFooter","footer","json","class","input_item","output_item","inputDummy","outputDummy","z","attr","attributes","nodeName","startsWith","split","infoNode","numInputs","node_id","newType","newLabel","removeSingleConnection","numOutputs","removeInputs","connectionsInputs","input_class_id","nodeUpdates","itemx","f","Set","id_class","itemz","g","removeOutputs","connectionsOuputs","output_class_id","removeConnectionNodeId","listclass","index_out","index_in","idSearchIn","elemsIn","nameModule","import","changeModule","dataExport","clear","callback","error","listeners","filter","listener","details","s","hexDigits","substr","floor","random","join"],"mappings":"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","file":"drawflow.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Drawflow\"] = factory();\n\telse\n\t\troot[\"Drawflow\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export default class Drawflow {\r\n  constructor(container, render = null) {\r\n    this.events = {};\r\n    this.container = container;\r\n    this.precanvas = null;\r\n    this.nodeId = 1;\r\n    this.ele_selected = null;\r\n    this.node_selected = null;\r\n    this.drag = false;\r\n    this.reroute = false;\r\n    this.reroute_fix_curvature = false;\r\n    this.curvature = 0.5;\r\n    this.reroute_curvature_start_end = 0.5;\r\n    this.reroute_curvature = 0.5;\r\n    this.reroute_width = 6;\r\n    this.drag_point = false;\r\n    this.editor_selected = false;\r\n    this.connection = false;\r\n    this.connection_ele = null;\r\n    this.connection_selected = null;\r\n    this.canvas_x = 0;\r\n    this.canvas_y = 0;\r\n    this.pos_x = 0;\r\n    this.pos_x_start = 0;\r\n    this.pos_y = 0;\r\n    this.pos_y_start = 0;\r\n    this.mouse_x = 0;\r\n    this.mouse_y = 0;\r\n    this.line_path = 5;\r\n    this.first_click = null;\r\n    this.force_first_input = false;\r\n    this.draggable_inputs = true;\r\n    this.useuuid = false;\r\n    this.checkInOutType = false;\r\n    this.singleConnectionForTypedInput = false;\r\n\r\n    this.select_elements = null;\r\n    this.noderegister = {};\r\n    this.render = render;\r\n    this.drawflow = { \"drawflow\": { \"Home\": { \"data\": {} } } };\r\n    // Configurable options\r\n    this.module = 'Home';\r\n    this.editor_mode = 'edit';\r\n    this.zoom = 1;\r\n    this.zoom_max = 1.6;\r\n    this.zoom_min = 0.5;\r\n    this.zoom_value = 0.1;\r\n    this.zoom_last_value = 1;\r\n\r\n    // Mobile\r\n    this.evCache = [];\r\n    this.prevDiff = -1;\r\n  }\r\n\r\n  start() {\r\n    // console.info(\"Start Drawflow!!\");\r\n    this.container.classList.add(\"parent-drawflow\");\r\n    this.container.tabIndex = 0;\r\n    this.precanvas = document.createElement('div');\r\n    this.precanvas.classList.add(\"drawflow\");\r\n    this.container.appendChild(this.precanvas);\r\n\r\n    /* Mouse and Touch Actions */\r\n    this.container.addEventListener('mouseup', this.dragEnd.bind(this));\r\n    this.container.addEventListener('mousemove', this.position.bind(this));\r\n    this.container.addEventListener('mousedown', this.click.bind(this));\r\n\r\n    this.container.addEventListener('touchend', this.dragEnd.bind(this));\r\n    this.container.addEventListener('touchmove', this.position.bind(this));\r\n    this.container.addEventListener('touchstart', this.click.bind(this));\r\n\r\n    /* Context Menu */\r\n    this.container.addEventListener('contextmenu', this.contextmenu.bind(this));\r\n    /* Delete */\r\n    this.container.addEventListener('keydown', this.key.bind(this));\r\n\r\n    /* Zoom Mouse */\r\n    this.container.addEventListener('wheel', this.zoom_enter.bind(this));\r\n    /* Update data Nodes */\r\n    this.container.addEventListener('input', this.updateNodeValue.bind(this));\r\n\r\n    this.container.addEventListener('dblclick', this.dblclick.bind(this));\r\n    /* Mobile zoom */\r\n    this.container.onpointerdown = this.pointerdown_handler.bind(this);\r\n    this.container.onpointermove = this.pointermove_handler.bind(this);\r\n    this.container.onpointerup = this.pointerup_handler.bind(this);\r\n    this.container.onpointercancel = this.pointerup_handler.bind(this);\r\n    this.container.onpointerout = this.pointerup_handler.bind(this);\r\n    this.container.onpointerleave = this.pointerup_handler.bind(this);\r\n\r\n    this.load();\r\n  }\r\n\r\n  /* Mobile zoom */\r\n  pointerdown_handler(ev) {\r\n    this.evCache.push(ev);\r\n  }\r\n\r\n  pointermove_handler(ev) {\r\n    for(var i = 0; i < this.evCache.length; i++) {\r\n      if(ev.pointerId == this.evCache[i].pointerId) {\r\n        this.evCache[i] = ev;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(this.evCache.length == 2) {\r\n      // Calculate the distance between the two pointers\r\n      var curDiff = Math.abs(this.evCache[0].clientX - this.evCache[1].clientX);\r\n\r\n      if(this.prevDiff > 100) {\r\n        if(curDiff > this.prevDiff) {\r\n          // The distance between the two pointers has increased\r\n\r\n          this.zoom_in();\r\n        }\r\n        if(curDiff < this.prevDiff) {\r\n          // The distance between the two pointers has decreased\r\n          this.zoom_out();\r\n        }\r\n      }\r\n      this.prevDiff = curDiff;\r\n    }\r\n  }\r\n\r\n  pointerup_handler(ev) {\r\n    this.remove_event(ev);\r\n    if(this.evCache.length < 2) {\r\n      this.prevDiff = -1;\r\n    }\r\n  }\r\n\r\n  remove_event(ev) {\r\n    // Remove this event from the target's cache\r\n    for(var i = 0; i < this.evCache.length; i++) {\r\n      if(this.evCache[i].pointerId == ev.pointerId) {\r\n        this.evCache.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* End Mobile Zoom */\r\n  load() {\r\n    for(let key in this.drawflow.drawflow[this.module].data) {\r\n      this.addNodeImport(this.drawflow.drawflow[this.module].data[key], this.precanvas);\r\n    }\r\n\r\n    if(this.reroute) {\r\n      for(let key in this.drawflow.drawflow[this.module].data) {\r\n        this.addRerouteImport(this.drawflow.drawflow[this.module].data[key]);\r\n      }\r\n    }\r\n\r\n    for(let key in this.drawflow.drawflow[this.module].data) {\r\n      this.updateConnectionNodes('node-' + key);\r\n    }\r\n\r\n    const editor = this.drawflow.drawflow;\r\n    let number = 1;\r\n    Object.keys(editor).map(function(moduleName, index) {\r\n      Object.keys(editor[moduleName].data).map(function(id, index2) {\r\n        if(parseInt(id) >= number) {\r\n          number = parseInt(id) + 1;\r\n        }\r\n      });\r\n    });\r\n    this.nodeId = number;\r\n  }\r\n\r\n  removeReouteConnectionSelected() {\r\n    this.dispatch('connectionUnselected', true);\r\n    if(this.reroute_fix_curvature) {\r\n      this.connection_selected.parentElement.querySelectorAll(\".main-path\").forEach((item, i) => {\r\n        item.classList.remove(\"selected\");\r\n      });\r\n    }\r\n  }\r\n\r\n  click(e) {\r\n    this.dispatch('click', e);\r\n    if(this.editor_mode === 'fixed') {\r\n      //return false;\r\n      if(e.target.classList[0] === 'parent-drawflow' || e.target.classList[0] === 'drawflow') {\r\n        this.ele_selected = e.target.closest(\".parent-drawflow\");\r\n      } else {\r\n        return false;\r\n      }\r\n    } else if(this.editor_mode === 'view') {\r\n      if(e.target.closest(\".drawflow\") != null || e.target.matches('.parent-drawflow')) {\r\n        this.ele_selected = e.target.closest(\".parent-drawflow\");\r\n        e.preventDefault();\r\n      }\r\n    } else {\r\n      this.first_click = e.target;\r\n      this.ele_selected = e.target;\r\n      if(e.button === 0) {\r\n        this.contextmenuDel();\r\n      }\r\n\r\n      // if(e.target.closest(\".drawflow_content_node\") != null) {\r\n      //   this.ele_selected = e.target.closest(\".drawflow_content_node\").parentElement;\r\n      // }\r\n\r\n      // Closest element not output/input or connection, then select the node\r\n      if((e.target.closest(\".output\") == null && e.target.closest(\".input\") == null && e.target.closest(\".connection\") == null) && e.target.closest(\".drawflow-node\") != null) {\r\n        this.ele_selected = e.target.closest(\".drawflow-node\");\r\n      }\r\n    }\r\n    switch(this.ele_selected.classList[0]) {\r\n      case 'drawflow-node':\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          if(this.node_selected != this.ele_selected) {\r\n            this.dispatch('nodeUnselected', true);\r\n          }\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        if(this.node_selected != this.ele_selected) {\r\n          this.dispatch('nodeSelected', this.ele_selected.id.slice(5));\r\n        }\r\n        this.node_selected = this.ele_selected;\r\n        this.node_selected.classList.add(\"selected\");\r\n        if(!this.draggable_inputs) {\r\n          if(e.target.tagName !== 'INPUT' && e.target.tagName !== 'TEXTAREA' && e.target.tagName !== 'SELECT' && e.target.hasAttribute('contenteditable') !== true) {\r\n            this.drag = true;\r\n          }\r\n        } else {\r\n          if(e.target.tagName !== 'SELECT') {\r\n            this.drag = true;\r\n          }\r\n        }\r\n        break;\r\n      case 'output':\r\n        this.connection = true;\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        this.drawConnection(e.target);\r\n        break;\r\n      case 'parent-drawflow':\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        this.editor_selected = true;\r\n        break;\r\n      case 'drawflow':\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        this.editor_selected = true;\r\n        break;\r\n      case 'main-path':\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        this.connection_selected = this.ele_selected;\r\n        this.connection_selected.classList.add(\"selected\");\r\n        const listclassConnection = this.connection_selected.parentElement.classList;\r\n        this.dispatch('connectionSelected', { output_id: listclassConnection[2].slice(14), input_id: listclassConnection[1].slice(13), output_class: listclassConnection[3], input_class: listclassConnection[4] });\r\n        if(this.reroute_fix_curvature) {\r\n          this.connection_selected.parentElement.querySelectorAll(\".main-path\").forEach((item, i) => {\r\n            item.classList.add(\"selected\");\r\n          });\r\n        }\r\n        break;\r\n      case 'point':\r\n        this.drag_point = true;\r\n        this.ele_selected.classList.add(\"selected\");\r\n        break;\r\n      case 'drawflow-delete':\r\n        if(this.node_selected) {\r\n          this.removeNodeId(this.node_selected.id);\r\n        }\r\n\r\n        if(this.connection_selected) {\r\n          this.removeConnection();\r\n        }\r\n\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n\r\n        break;\r\n      default:\r\n    }\r\n    if(e.type === \"touchstart\") {\r\n      this.pos_x = e.touches[0].clientX;\r\n      this.pos_x_start = e.touches[0].clientX;\r\n      this.pos_y = e.touches[0].clientY;\r\n      this.pos_y_start = e.touches[0].clientY;\r\n    } else {\r\n      this.pos_x = e.clientX;\r\n      this.pos_x_start = e.clientX;\r\n      this.pos_y = e.clientY;\r\n      this.pos_y_start = e.clientY;\r\n    }\r\n    this.dispatch('clickEnd', e);\r\n  }\r\n\r\n  position(e) {\r\n    let e_pos_x, e_pos_y;\r\n    if(e.type === \"touchmove\") {\r\n      e_pos_x = e.touches[0].clientX;\r\n      e_pos_y = e.touches[0].clientY;\r\n    } else {\r\n      e_pos_x = e.clientX;\r\n      e_pos_y = e.clientY;\r\n    }\r\n\r\n    if(this.connection) {\r\n      this.updateConnection(e_pos_x, e_pos_y);\r\n    }\r\n\r\n    if(this.editor_selected) {\r\n      /*if (e.ctrlKey) {\r\n        this.selectElements(e_pos_x, e_pos_y);\r\n      } else { */\r\n      const x = this.canvas_x + (-(this.pos_x - e_pos_x));\r\n      const y = this.canvas_y + (-(this.pos_y - e_pos_y));\r\n      // console.log(canvas_x +' - ' +pos_x + ' - '+ e_pos_x + ' - ' + x);\r\n      this.dispatch('translate', { x: x, y: y });\r\n      this.precanvas.style.transform = \"translate(\" + x + \"px, \" + y + \"px) scale(\" + this.zoom + \")\";\r\n      //}\r\n    }\r\n\r\n    if(this.drag) {\r\n\r\n      const x = (this.pos_x - e_pos_x) * this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom);\r\n      const y = (this.pos_y - e_pos_y) * this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom);\r\n      this.pos_x = e_pos_x;\r\n      this.pos_y = e_pos_y;\r\n\r\n      this.ele_selected.style.top = (this.ele_selected.offsetTop - y) + \"px\";\r\n      this.ele_selected.style.left = (this.ele_selected.offsetLeft - x) + \"px\";\r\n\r\n      this.drawflow.drawflow[this.module].data[this.ele_selected.id.slice(5)].pos_x = (this.ele_selected.offsetLeft - x);\r\n      this.drawflow.drawflow[this.module].data[this.ele_selected.id.slice(5)].pos_y = (this.ele_selected.offsetTop - y);\r\n\r\n      this.updateConnectionNodes(this.ele_selected.id);\r\n    }\r\n\r\n    if(this.drag_point) {\r\n\r\n      // const x = (this.pos_x - e_pos_x) * this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom);\r\n      // const y = (this.pos_y - e_pos_y) * this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom);\r\n      this.pos_x = e_pos_x;\r\n      this.pos_y = e_pos_y;\r\n\r\n      var pos_x = this.pos_x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)) - (this.precanvas.getBoundingClientRect().x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)));\r\n      var pos_y = this.pos_y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)) - (this.precanvas.getBoundingClientRect().y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)));\r\n\r\n      this.ele_selected.setAttributeNS(null, 'cx', pos_x);\r\n      this.ele_selected.setAttributeNS(null, 'cy', pos_y);\r\n\r\n      const nodeUpdate = this.ele_selected.parentElement.classList[2].slice(9);\r\n      const nodeUpdateIn = this.ele_selected.parentElement.classList[1].slice(13);\r\n      const output_class = this.ele_selected.parentElement.classList[3];\r\n      const input_class = this.ele_selected.parentElement.classList[4];\r\n\r\n      let numberPointPosition = Array.from(this.ele_selected.parentElement.children).indexOf(this.ele_selected) - 1;\r\n\r\n      if(this.reroute_fix_curvature) {\r\n        const numberMainPath = this.ele_selected.parentElement.querySelectorAll(\".main-path\").length - 1;\r\n\r\n        numberPointPosition -= numberMainPath;\r\n        if(numberPointPosition < 0) {\r\n          numberPointPosition = 0;\r\n        }\r\n      }\r\n\r\n      const nodeId = nodeUpdate.slice(5);\r\n      const searchConnection = this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections.findIndex(function(item, i) {\r\n        return item.node === nodeUpdateIn && item.output === input_class;\r\n      });\r\n\r\n      this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points[numberPointPosition] = { pos_x: pos_x, pos_y: pos_y };\r\n\r\n      const parentSelected = this.ele_selected.parentElement.classList[2].slice(9);\r\n\r\n      /*this.drawflow.drawflow[this.module].data[this.ele_selected.id.slice(5)].pos_x = (this.ele_selected.offsetLeft - x);\r\n      this.drawflow.drawflow[this.module].data[this.ele_selected.id.slice(5)].pos_y = (this.ele_selected.offsetTop - y);\r\n      */\r\n      this.updateConnectionNodes(parentSelected);\r\n    }\r\n\r\n    if(e.type === \"touchmove\") {\r\n      this.mouse_x = e_pos_x;\r\n      this.mouse_y = e_pos_y;\r\n    }\r\n    this.dispatch('mouseMove', { x: e_pos_x, y: e_pos_y });\r\n  }\r\n\r\n  dragEnd(e) {\r\n    let e_pos_x, e_pos_y, ele_last;\r\n    if(this.select_elements != null) {\r\n      this.select_elements.remove();\r\n      this.select_elements = null;\r\n    }\r\n\r\n    if(e.type === \"touchend\") {\r\n      e_pos_x = this.mouse_x;\r\n      e_pos_y = this.mouse_y;\r\n      ele_last = document.elementFromPoint(e_pos_x, e_pos_y);\r\n    } else {\r\n      e_pos_x = e.clientX;\r\n      e_pos_y = e.clientY;\r\n      ele_last = e.target;\r\n    }\r\n\r\n    if(this.drag) {\r\n      if(this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\r\n        this.dispatch('nodeMoved', this.ele_selected.id.slice(5));\r\n      }\r\n    }\r\n\r\n    if(this.drag_point) {\r\n      this.ele_selected.classList.remove(\"selected\");\r\n    }\r\n\r\n    if(this.editor_selected) {\r\n      this.canvas_x = this.canvas_x + (-(this.pos_x - e_pos_x));\r\n      this.canvas_y = this.canvas_y + (-(this.pos_y - e_pos_y));\r\n      this.editor_selected = false;\r\n    }\r\n    if(this.connection === true) {\r\n      //console.log(ele_last)\r\n      let input_id, input_class;\r\n      if(ele_last.classList[0] === 'input' || (this.force_first_input && (ele_last.closest(\".drawflow_content_node\") != null || ele_last.classList[0] === 'drawflow-node'))) {\r\n\r\n        if(this.force_first_input && (ele_last.closest(\".drawflow_content_node\") != null || ele_last.classList[0] === 'drawflow-node')) {\r\n          if(ele_last.closest(\".drawflow_content_node\") != null) {\r\n            input_id = ele_last.closest(\".drawflow_content_node\").parentElement.id;\r\n          } else {\r\n            input_id = ele_last.id;\r\n          }\r\n          if(Object.keys(this.getNodeFromId(input_id.slice(5)).inputs).length === 0) {\r\n            input_class = false;\r\n          } else {\r\n            input_class = \"input_1\";\r\n          }\r\n\r\n        } else {\r\n          // Fix connection (get input node id if none)\r\n          // input_id = ele_last.closest('.drawflow-node').id;\r\n          input_id = ele_last.parentElement.parentElement.parentElement.id;\r\n          input_class = ele_last.classList[1];\r\n        }\r\n        // Get ouput node id\r\n        // var output_id = this.ele_selected.closest('.drawflow-node').id;\r\n        var output_id = this.ele_selected.parentElement.parentElement.parentElement.id;\r\n        var output_class = this.ele_selected.classList[1];\r\n\r\n        if(output_id !== input_id && input_class !== false) {\r\n          // This checks if there is already a connection between the same ouput/input\r\n          if(this.container.querySelectorAll('.connection.node_in_' + input_id + '.node_out_' + output_id + '.' + output_class + '.' + input_class).length === 0) {\r\n            var id_input = input_id.slice(5);\r\n            var id_output = output_id.slice(5);\r\n            // Test connection type matches between input and output\r\n            if((this.checkInOutType && this.checkConnectionTypes(id_input, input_class, id_output, output_class)) || !this.checkInOutType) {\r\n              var alreadyLinked = false;\r\n              // If there is a type and singleConnectionForTypedInput = true, then we must check if there is already a link here\r\n              if(this.drawflow.drawflow[this.module].data[id_input].inputs[input_class].type && this.singleConnectionForTypedInput) {\r\n                if(this.container.querySelectorAll('.node_in_' + input_id + '.' + input_class).length > 0) {\r\n                  alreadyLinked = true;\r\n                }\r\n              }\r\n              // If not already linked to something, we can add the connection\r\n              if(!alreadyLinked) {\r\n                // Conection no exist save connection          \r\n                this.connection_ele.classList.add(\"node_in_\" + input_id);\r\n                this.connection_ele.classList.add(\"node_out_\" + output_id);\r\n                this.connection_ele.classList.add(output_class);\r\n                this.connection_ele.classList.add(input_class);\r\n                this.connection_ele.setAttribute(\"type\", this.drawflow.drawflow[this.module].data[id_output].outputs[output_class].type);\r\n\r\n                this.drawflow.drawflow[this.module].data[id_output].outputs[output_class].connections.push({ \"node\": id_input, \"output\": input_class });\r\n                this.drawflow.drawflow[this.module].data[id_input].inputs[input_class].connections.push({ \"node\": id_output, \"input\": output_class });\r\n\r\n                // Add \"linked\" style to both input/output element\r\n                var output = document.querySelector('#' + output_id + ' .' + output_class);\r\n                if(output && !output.classList.contains('linked')) {\r\n                  output.classList.add(\"linked\");\r\n                }\r\n\r\n                var input = document.querySelector('#' + input_id + ' .' + input_class);\r\n                if(input && !input.classList.contains('linked')) {\r\n                  input.classList.add(\"linked\");\r\n                }\r\n\r\n                this.updateConnectionNodes('node-' + id_output);\r\n                this.updateConnectionNodes('node-' + id_input);\r\n                this.dispatch('connectionCreated', { output_id: id_output, input_id: id_input, output_class: output_class, input_class: input_class });\r\n              } else {\r\n                console.log(\"There is already an output linked to the input: \" + input_class + \" for node: \" + id_input);\r\n                this.dispatch('connectionCancel', true);\r\n                this.connection_ele.remove();\r\n              }\r\n            } else {\r\n              console.log(\"Input and output type don't match\");\r\n              this.dispatch('connectionCancel', true);\r\n              this.connection_ele.remove();\r\n            }\r\n\r\n          } else {\r\n            this.dispatch('connectionCancel', true);\r\n            this.connection_ele.remove();\r\n          }\r\n\r\n          this.connection_ele = null;\r\n        } else {\r\n          // Connection exists Remove Connection;\r\n          this.dispatch('connectionCancel', true);\r\n          this.connection_ele.remove();\r\n          this.connection_ele = null;\r\n        }\r\n\r\n      } else {\r\n        // Remove Connection;\r\n        this.dispatch('connectionCancel', true);\r\n        this.connection_ele.remove();\r\n        this.connection_ele = null;\r\n      }\r\n    }\r\n\r\n    this.drag = false;\r\n    this.drag_point = false;\r\n    this.connection = false;\r\n    this.ele_selected = null;\r\n    this.editor_selected = false;\r\n\r\n  }\r\n\r\n  // Can be overriden with custom logic in order to constraint connection between outputs/inputs\r\n  checkConnectionTypes(input_id, input_class, output_id, output_class) {\r\n    return this.drawflow.drawflow[this.module].data[output_id].outputs[output_class].type == this.drawflow.drawflow[this.module].data[input_id].inputs[input_class].type;\r\n  }\r\n\r\n  contextmenu(e) {\r\n    this.dispatch('contextmenu', e);\r\n    e.preventDefault();\r\n    if(this.editor_mode === 'fixed' || this.editor_mode === 'view') {\r\n      return false;\r\n    }\r\n    if(this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\r\n      this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\r\n    }\r\n    if(this.node_selected || this.connection_selected) {\r\n      var deletebox = document.createElement('div');\r\n      deletebox.classList.add(\"drawflow-delete\");\r\n      deletebox.innerHTML = \"x\";\r\n      if(this.node_selected) {\r\n        this.node_selected.appendChild(deletebox);\r\n      }\r\n      if(this.connection_selected) {\r\n        deletebox.style.top = e.clientY * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)) - (this.precanvas.getBoundingClientRect().y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom))) + \"px\";\r\n        deletebox.style.left = e.clientX * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)) - (this.precanvas.getBoundingClientRect().x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom))) + \"px\";\r\n\r\n        this.precanvas.appendChild(deletebox);\r\n      }\r\n    }\r\n  }\r\n\r\n  contextmenuDel() {\r\n    if(this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\r\n      this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\r\n    }\r\n  }\r\n\r\n  key(e) {\r\n    this.dispatch('keydown', e);\r\n    if(this.editor_mode === 'fixed' || this.editor_mode === 'view') {\r\n      return false;\r\n    }\r\n    if(e.key === 'Delete' || (e.key === 'Backspace' && e.metaKey)) {\r\n      if(this.node_selected != null) {\r\n        if(this.first_click.tagName !== 'INPUT' && this.first_click.tagName !== 'TEXTAREA' && this.first_click.hasAttribute('contenteditable') !== true) {\r\n          this.removeNodeId(this.node_selected.id);\r\n        }\r\n      }\r\n      if(this.connection_selected != null) {\r\n        this.removeConnection();\r\n      }\r\n    }\r\n  }\r\n\r\n  zoom_enter(event, delta) {\r\n    if(event.ctrlKey) {\r\n      event.preventDefault();\r\n      if(event.deltaY > 0) {\r\n        // Zoom Out\r\n        this.zoom_out();\r\n      } else {\r\n        // Zoom In\r\n        this.zoom_in();\r\n      }\r\n      //this.precanvas.style.transform = \"translate(\"+this.canvas_x+\"px, \"+this.canvas_y+\"px) scale(\"+this.zoom+\")\";\r\n    }\r\n  }\r\n\r\n  zoom_refresh() {\r\n    this.dispatch('zoom', this.zoom);\r\n    this.canvas_x = (this.canvas_x / this.zoom_last_value) * this.zoom;\r\n    this.canvas_y = (this.canvas_y / this.zoom_last_value) * this.zoom;\r\n    this.zoom_last_value = this.zoom;\r\n    this.precanvas.style.transform = \"translate(\" + this.canvas_x + \"px, \" + this.canvas_y + \"px) scale(\" + this.zoom + \")\";\r\n  }\r\n\r\n  zoom_in() {\r\n    if(this.zoom < this.zoom_max) {\r\n      this.zoom += this.zoom_value;\r\n      this.zoom_refresh();\r\n    }\r\n  }\r\n\r\n  zoom_out() {\r\n    if(this.zoom > this.zoom_min) {\r\n      this.zoom -= this.zoom_value;\r\n      this.zoom_refresh();\r\n    }\r\n  }\r\n\r\n  zoom_reset() {\r\n    if(this.zoom != 1) {\r\n      this.zoom = 1;\r\n      this.zoom_refresh();\r\n    }\r\n  }\r\n\r\n  createCurvature(start_pos_x, start_pos_y, end_pos_x, end_pos_y, curvature_value, type) {\r\n    var line_x = start_pos_x;\r\n    var line_y = start_pos_y;\r\n    var x = end_pos_x;\r\n    var y = end_pos_y;\r\n    var curvature = curvature_value;\r\n    //type openclose open close other\r\n    let hx1, hx2;\r\n\r\n    switch(type) {\r\n      case 'open':\r\n        if(start_pos_x >= end_pos_x) {\r\n          hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n          hx2 = x - Math.abs(x - line_x) * (curvature * -1);\r\n        } else {\r\n          hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n          hx2 = x - Math.abs(x - line_x) * curvature;\r\n        }\r\n        return ' M ' + line_x + ' ' + line_y + ' C ' + hx1 + ' ' + line_y + ' ' + hx2 + ' ' + y + ' ' + x + '  ' + y;\r\n      // break;\r\n\r\n      case 'close':\r\n        if(start_pos_x >= end_pos_x) {\r\n          hx1 = line_x + Math.abs(x - line_x) * (curvature * -1);\r\n          hx2 = x - Math.abs(x - line_x) * curvature;\r\n        } else {\r\n          hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n          hx2 = x - Math.abs(x - line_x) * curvature;\r\n        }\r\n        return ' M ' + line_x + ' ' + line_y + ' C ' + hx1 + ' ' + line_y + ' ' + hx2 + ' ' + y + ' ' + x + '  ' + y;\r\n      // break;\r\n\r\n      case 'other':\r\n        if(start_pos_x >= end_pos_x) {\r\n          hx1 = line_x + Math.abs(x - line_x) * (curvature * -1);\r\n          hx2 = x - Math.abs(x - line_x) * (curvature * -1);\r\n        } else {\r\n          hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n          hx2 = x - Math.abs(x - line_x) * curvature;\r\n        }\r\n        return ' M ' + line_x + ' ' + line_y + ' C ' + hx1 + ' ' + line_y + ' ' + hx2 + ' ' + y + ' ' + x + '  ' + y;\r\n      // break;\r\n\r\n      default:\r\n\r\n        hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n        hx2 = x - Math.abs(x - line_x) * curvature;\r\n\r\n        return ' M ' + line_x + ' ' + line_y + ' C ' + hx1 + ' ' + line_y + ' ' + hx2 + ' ' + y + ' ' + x + '  ' + y;\r\n    }\r\n\r\n  }\r\n\r\n  drawConnection(ele) {\r\n    var connection = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n    this.connection_ele = connection;\r\n    var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n    path.classList.add(\"main-path\");\r\n    path.setAttributeNS(null, 'd', '');\r\n    // path.innerHTML = 'a';\r\n    connection.classList.add(\"connection\");\r\n    connection.appendChild(path);\r\n    this.precanvas.appendChild(connection);\r\n    // Retrieve output node Id\r\n    // var id_output = ele.closest('.drawflow-node').id.slice(5);\r\n    var id_output = ele.parentElement.parentElement.parentElement.id.slice(5);\r\n    var output_class = ele.classList[1];\r\n    // Apply same type to connection from 'output'\r\n    connection.setAttribute(\"type\", this.drawflow.drawflow[this.module].data[id_output].outputs[output_class].type);\r\n    this.dispatch('connectionStart', { output_id: id_output, output_class: output_class });\r\n\r\n  }\r\n\r\n  updateConnection(eX, eY) {\r\n    const precanvas = this.precanvas;\r\n    const zoom = this.zoom;\r\n    let precanvasWitdhZoom = precanvas.clientWidth / (precanvas.clientWidth * zoom);\r\n    precanvasWitdhZoom = precanvasWitdhZoom || 0;\r\n    let precanvasHeightZoom = precanvas.clientHeight / (precanvas.clientHeight * zoom);\r\n    precanvasHeightZoom = precanvasHeightZoom || 0;\r\n    var path = this.connection_ele.children[0];\r\n\r\n    /*var line_x = this.ele_selected.offsetWidth/2 + this.line_path/2 + this.ele_selected.parentElement.parentElement.offsetLeft + this.ele_selected.offsetLeft;\r\n    var line_y = this.ele_selected.offsetHeight/2 + this.line_path/2 + this.ele_selected.parentElement.parentElement.offsetTop + this.ele_selected.offsetTop;*/\r\n\r\n    var line_x = this.ele_selected.offsetWidth / 2 + (this.ele_selected.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n    var line_y = this.ele_selected.offsetHeight / 2 + (this.ele_selected.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n    var x = eX * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)) - (this.precanvas.getBoundingClientRect().x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)));\r\n    var y = eY * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)) - (this.precanvas.getBoundingClientRect().y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)));\r\n\r\n    /*\r\n    var curvature = 0.5;\r\n    var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n    var hx2 = x - Math.abs(x - line_x) * curvature;\r\n    */\r\n\r\n    //path.setAttributeNS(null, 'd', 'M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y);\r\n    var curvature = this.curvature;\r\n    var lineCurve = this.createCurvature(line_x, line_y, x, y, curvature, 'openclose');\r\n    path.setAttributeNS(null, 'd', lineCurve);\r\n\r\n  }\r\n\r\n  addConnection(id_output, id_input, output_class, input_class) {\r\n    var nodeOneModule = this.getModuleFromNodeId(id_output);\r\n    var nodeTwoModule = this.getModuleFromNodeId(id_input);\r\n    if(nodeOneModule === nodeTwoModule) {\r\n\r\n      var dataNode = this.getNodeFromId(id_output);\r\n      var exist = false;\r\n      for(var checkOutput in dataNode.outputs[output_class].connections) {\r\n        var connectionSearch = dataNode.outputs[output_class].connections[checkOutput];\r\n        if(connectionSearch.node == id_input && connectionSearch.output == input_class) {\r\n          exist = true;\r\n        }\r\n      }\r\n      // Check connection exist\r\n      if(exist === false) {\r\n        //Create Connection\r\n        this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.push({ \"node\": id_input.toString(), \"output\": input_class });\r\n        this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.push({ \"node\": id_output.toString(), \"input\": output_class });\r\n\r\n        if(this.module === nodeOneModule) {\r\n          // Check type matches\r\n          if((this.checkInOutType && this.checkConnectionTypes(id_input, input_class, id_output, output_class)) || !this.checkInOutType) {\r\n            //Draw connection\r\n            var connection = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n            var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n            path.classList.add(\"main-path\");\r\n            path.setAttributeNS(null, 'd', '');\r\n            // path.innerHTML = 'a';\r\n            connection.classList.add(\"connection\");\r\n            connection.classList.add(\"node_in_node-\" + id_input);\r\n            connection.classList.add(\"node_out_node-\" + id_output);\r\n            connection.classList.add(output_class);\r\n            connection.classList.add(input_class);\r\n            // Apply output type to connection\r\n            connection.setAttribute(\"type\", this.drawflow.drawflow[this.module].data[id_output].outputs[output_class].type);\r\n            connection.appendChild(path);\r\n\r\n            // Add \"linked\" style to both input/output element\r\n            var output = document.querySelector('#node-' + id_output + ' .' + output_class);\r\n            if(output && !output.classList.contains('linked')) {\r\n              output.classList.add(\"linked\");\r\n            }\r\n\r\n            var input = document.querySelector('#node-' + id_input + ' .' + input_class);\r\n            if(input && !input.classList.contains('linked')) {\r\n              input.classList.add(\"linked\");\r\n            }\r\n\r\n            this.precanvas.appendChild(connection);\r\n            this.updateConnectionNodes('node-' + id_output);\r\n            this.updateConnectionNodes('node-' + id_input);\r\n\r\n            this.dispatch('connectionCreated', { output_id: id_output, input_id: id_input, output_class: output_class, input_class: input_class });\r\n          }\r\n          else\r\n            console.log(\"Input \" + id_input + input_class + \" and ouput \" + id_output + output_class + \" types don't match\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateConnectionNodes(id) {\r\n\r\n    // Aquí nos quedamos;\r\n    const idSearch = 'node_in_' + id;\r\n    const idSearchOut = 'node_out_' + id;\r\n    // var line_path = this.line_path/2;\r\n    const container = this.container;\r\n    const precanvas = this.precanvas;\r\n    const curvature = this.curvature;\r\n    const createCurvature = this.createCurvature;\r\n    const reroute_curvature = this.reroute_curvature;\r\n    const reroute_curvature_start_end = this.reroute_curvature_start_end;\r\n    const reroute_fix_curvature = this.reroute_fix_curvature;\r\n    const rerouteWidth = this.reroute_width;\r\n    const zoom = this.zoom;\r\n    let precanvasWitdhZoom = precanvas.clientWidth / (precanvas.clientWidth * zoom);\r\n    precanvasWitdhZoom = precanvasWitdhZoom || 0;\r\n    let precanvasHeightZoom = precanvas.clientHeight / (precanvas.clientHeight * zoom);\r\n    precanvasHeightZoom = precanvasHeightZoom || 0;\r\n\r\n    const elemsOut = container.querySelectorAll(`.${idSearchOut}`);\r\n\r\n    Object.keys(elemsOut).map(function(item, index) {\r\n      if(elemsOut[item].querySelector('.point') === null) {\r\n\r\n        var elemtsearchId_out = container.querySelector(`#${id}`);\r\n\r\n        var id_search = elemsOut[item].classList[1].replace('node_in_', '');\r\n        var elemtsearchId = container.querySelector(`#${id_search}`);\r\n\r\n        var elemtsearch = elemtsearchId.querySelectorAll('.' + elemsOut[item].classList[4])[0];\r\n\r\n        /*var eX = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n        var eY = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n        var eX = elemtsearch.offsetWidth / 2 + (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n        var eY = elemtsearch.offsetHeight / 2 + (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n        var elemtsearchOut = elemtsearchId_out.querySelectorAll('.' + elemsOut[item].classList[3])[0];\r\n        /*var line_x = elemtsearchId_out.offsetLeft + elemtsearchId_out.querySelectorAll('.'+elemsOut[item].classList[3])[0].offsetLeft + elemtsearchId_out.querySelectorAll('.'+elemsOut[item].classList[3])[0].offsetWidth/2 + line_path;\r\n        var line_y = elemtsearchId_out.offsetTop + elemtsearchId_out.querySelectorAll('.'+elemsOut[item].classList[3])[0].offsetTop + elemtsearchId_out.querySelectorAll('.'+elemsOut[item].classList[3])[0].offsetHeight/2 + line_path;*/\r\n        var line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n        var line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n        var x = eX;\r\n        var y = eY;\r\n        /*\r\n        var curvature = 0.5;\r\n        var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n        var hx2 = x - Math.abs(x - line_x) * curvature;\r\n        // console.log('M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y );\r\n        elemsOut[item].children[0].setAttributeNS(null, 'd', 'M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y );\r\n        */\r\n\r\n        const lineCurve = createCurvature(line_x, line_y, x, y, curvature, 'openclose');\r\n        elemsOut[item].children[0].setAttributeNS(null, 'd', lineCurve);\r\n      } else {\r\n        const points = elemsOut[item].querySelectorAll('.point');\r\n        let linecurve = '';\r\n        const reoute_fix = [];\r\n        points.forEach((item, i) => {\r\n          if(i === 0 && ((points.length - 1) === 0)) {\r\n            // M line_x line_y C hx1 line_y hx2 y x y\r\n            let elemtsearchId_out = container.querySelector(`#${id}`);\r\n            let elemtsearch = item;\r\n\r\n            let eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n\r\n            /*var line_x = elemtsearchId_out.offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetWidth/2 + line_path;\r\n            var line_y = elemtsearchId_out.offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetHeight/2 + line_path;*/\r\n            let elemtsearchOut = elemtsearchId_out.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n            let line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n            let x = eX;\r\n            let y = eY;\r\n\r\n            /*var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'open');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n            //var elemtsearchId_out = document.getElementById(id);\r\n            elemtsearchId_out = item;\r\n            let id_search = item.parentElement.classList[1].replace('node_in_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n\r\n            /*var eX = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var eY = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchIn = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n            eX = elemtsearchIn.offsetWidth / 2 + (elemtsearchIn.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            eY = elemtsearchIn.offsetHeight / 2 + (elemtsearchIn.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            x = eX;\r\n            y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;\r\n            */\r\n            lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'close');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else if(i === 0) {\r\n            //console.log(\"Primero\");\r\n            // M line_x line_y C hx1 line_y hx2 y x y\r\n            // FIRST\r\n            let elemtsearchId_out = container.querySelector(`#${id}`);\r\n            let elemtsearch = item;\r\n\r\n            let eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n\r\n            /*var line_x = elemtsearchId_out.offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetWidth/2 + line_path;\r\n            var line_y = elemtsearchId_out.offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetHeight/2 + line_path;*/\r\n            let elemtsearchOut = elemtsearchId_out.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n            let line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'open');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n            // SECOND\r\n            elemtsearchId_out = item;\r\n            elemtsearch = points[i + 1];\r\n\r\n            eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            x = eX;\r\n            y = eY;\r\n            /*\r\n            var curvature = reroute_curvature;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature, 'other');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else if(i === (points.length - 1)) {\r\n            //console.log(\"Final\");\r\n            let elemtsearchId_out = item;\r\n\r\n            let id_search = item.parentElement.classList[1].replace('node_in_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            let elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n\r\n            /*var eX = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var eY = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchIn = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n            let eX = elemtsearchIn.offsetWidth / 2 + (elemtsearchIn.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let eY = elemtsearchIn.offsetHeight / 2 + (elemtsearchIn.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n            let line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * (precanvas.clientWidth / (precanvas.clientWidth * zoom)) + rerouteWidth;\r\n            let line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * (precanvas.clientHeight / (precanvas.clientHeight * zoom)) + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'close');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else {\r\n            let elemtsearchId_out = item;\r\n            let elemtsearch = points[i + 1];\r\n\r\n            let eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * (precanvas.clientWidth / (precanvas.clientWidth * zoom)) + rerouteWidth;\r\n            let eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * (precanvas.clientHeight / (precanvas.clientHeight * zoom)) + rerouteWidth;\r\n            let line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * (precanvas.clientWidth / (precanvas.clientWidth * zoom)) + rerouteWidth;\r\n            let line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * (precanvas.clientHeight / (precanvas.clientHeight * zoom)) + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = reroute_curvature;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature, 'other');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n          }\r\n\r\n        });\r\n        if(reroute_fix_curvature) {\r\n          reoute_fix.forEach((itempath, i) => {\r\n            elemsOut[item].children[i].setAttributeNS(null, 'd', itempath);\r\n          });\r\n\r\n        } else {\r\n          elemsOut[item].children[0].setAttributeNS(null, 'd', linecurve);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    const elems = container.querySelectorAll(`.${idSearch}`);\r\n    Object.keys(elems).map(function(item, index) {\r\n      // console.log(\"In\")\r\n      if(elems[item].querySelector('.point') === null) {\r\n        var elemtsearchId_in = container.querySelector(`#${id}`);\r\n\r\n        var id_search = elems[item].classList[2].replace('node_out_', '');\r\n        var elemtsearchId = container.querySelector(`#${id_search}`);\r\n        var elemtsearch = elemtsearchId.querySelectorAll('.' + elems[item].classList[3])[0];\r\n\r\n        /*var line_x = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n        var line_y = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n\r\n        var line_x = elemtsearch.offsetWidth / 2 + (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n        var line_y = elemtsearch.offsetHeight / 2 + (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n        /*var x = elemtsearchId_in.offsetLeft + elemtsearchId_in.querySelectorAll('.'+elems[item].classList[4])[0].offsetLeft + elemtsearchId_in.querySelectorAll('.'+elems[item].classList[4])[0].offsetWidth/2 + line_path;\r\n        var y = elemtsearchId_in.offsetTop + elemtsearchId_in.querySelectorAll('.'+elems[item].classList[4])[0].offsetTop + elemtsearchId_in.querySelectorAll('.'+elems[item].classList[4])[0].offsetHeight/2 + line_path;*/\r\n        elemtsearchId_in = elemtsearchId_in.querySelectorAll('.' + elems[item].classList[4])[0];\r\n        var x = elemtsearchId_in.offsetWidth / 2 + (elemtsearchId_in.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n        var y = elemtsearchId_in.offsetHeight / 2 + (elemtsearchId_in.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n        /*\r\n        var curvature = 0.5;\r\n        var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n        var hx2 = x - Math.abs(x - line_x) * curvature;\r\n        // console.log('M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y );\r\n        elems[item].children[0].setAttributeNS(null, 'd', 'M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y );*/\r\n        const lineCurve = createCurvature(line_x, line_y, x, y, curvature, 'openclose');\r\n        elems[item].children[0].setAttributeNS(null, 'd', lineCurve);\r\n\r\n      } else {\r\n        const points = elems[item].querySelectorAll('.point');\r\n        let linecurve = '';\r\n        const reoute_fix = [];\r\n        points.forEach((item, i) => {\r\n          if(i === 0 && ((points.length - 1) === 0)) {\r\n            // M line_x line_y C hx1 line_y hx2 y x y\r\n            let elemtsearchId_out = container.querySelector(`#${id}`);\r\n            let elemtsearch = item;\r\n\r\n            let line_x = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let line_y = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n\r\n            let elemtsearchIn = elemtsearchId_out.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n            let eX = elemtsearchIn.offsetWidth / 2 + (elemtsearchIn.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let eY = elemtsearchIn.offsetHeight / 2 + (elemtsearchIn.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            /*var eX = elemtsearchId_out.offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[4])[0].offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[4])[0].offsetWidth/2 + line_path;\r\n            var eY = elemtsearchId_out.offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[4])[0].offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[4])[0].offsetHeight/2 + line_path;*/\r\n\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'close');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n            //var elemtsearchId_out = document.getElementById(id);\r\n            elemtsearchId_out = item;\r\n            let id_search = item.parentElement.classList[2].replace('node_out_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n\r\n            /*var line_x = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var line_y = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchOut = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n            line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            eX = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            eY = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            x = eX;\r\n            y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'open');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else if(i === 0) {\r\n            // M line_x line_y C hx1 line_y hx2 y x y\r\n            // FIRST\r\n            let elemtsearchId_out = item;\r\n            let id_search = item.parentElement.classList[2].replace('node_out_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            let elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n\r\n            /*var line_x = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var line_y = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchOut = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n            let line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            let eX = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let eY = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'open');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n            // SECOND\r\n            elemtsearchId_out = item;\r\n            elemtsearch = points[i + 1];\r\n\r\n            eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            x = eX;\r\n            y = eY;\r\n\r\n            /*\r\n            var curvature = reroute_curvature;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature, 'other');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else if(i === (points.length - 1)) {\r\n\r\n            let elemtsearchId_out = item;\r\n\r\n            let id_search = item.parentElement.classList[1].replace('node_in_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            let elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n\r\n            /*var eX = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var eY = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchIn = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n            let eX = elemtsearchIn.offsetWidth / 2 + (elemtsearchIn.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let eY = elemtsearchIn.offsetHeight / 2 + (elemtsearchIn.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            let line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'close');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else {\r\n\r\n            let elemtsearchId_out = item;\r\n            let elemtsearch = points[i + 1];\r\n\r\n            let eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            let line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = reroute_curvature;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;\r\n            */\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature, 'other');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n          }\r\n\r\n        });\r\n        if(reroute_fix_curvature) {\r\n          reoute_fix.forEach((itempath, i) => {\r\n            elems[item].children[i].setAttributeNS(null, 'd', itempath);\r\n          });\r\n\r\n        } else {\r\n          elems[item].children[0].setAttributeNS(null, 'd', linecurve);\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  dblclick(e) {\r\n    if(this.connection_selected != null && this.reroute) {\r\n      this.createReroutePoint(this.connection_selected);\r\n    }\r\n\r\n    if(e.target.classList[0] === 'point') {\r\n      this.removeReroutePoint(e.target);\r\n    }\r\n\r\n    if(e.target.classList[0] === 'title-box') {\r\n      var close = e.target.closest(\".drawflow-node\");\r\n      this.dispatch('dblclick', close.id.slice(5));\r\n    }\r\n  }\r\n\r\n  createReroutePoint(ele) {\r\n    this.connection_selected.classList.remove(\"selected\");\r\n    const nodeUpdate = this.connection_selected.parentElement.classList[2].slice(9);\r\n    const nodeUpdateIn = this.connection_selected.parentElement.classList[1].slice(13);\r\n    const output_class = this.connection_selected.parentElement.classList[3];\r\n    const input_class = this.connection_selected.parentElement.classList[4];\r\n    this.connection_selected = null;\r\n    const point = document.createElementNS('http://www.w3.org/2000/svg', \"circle\");\r\n    point.classList.add(\"point\");\r\n    var pos_x = this.pos_x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)) - (this.precanvas.getBoundingClientRect().x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)));\r\n    var pos_y = this.pos_y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)) - (this.precanvas.getBoundingClientRect().y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)));\r\n\r\n    point.setAttributeNS(null, 'cx', pos_x);\r\n    point.setAttributeNS(null, 'cy', pos_y);\r\n    point.setAttributeNS(null, 'r', this.reroute_width);\r\n\r\n    let position_add_array_point = 0;\r\n    if(this.reroute_fix_curvature) {\r\n\r\n      const numberPoints = ele.parentElement.querySelectorAll(\".main-path\").length;\r\n      var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n      path.classList.add(\"main-path\");\r\n      path.setAttributeNS(null, 'd', '');\r\n\r\n      ele.parentElement.insertBefore(path, ele.parentElement.children[numberPoints]);\r\n      if(numberPoints === 1) {\r\n        ele.parentElement.appendChild(point);\r\n      } else {\r\n        const search_point = Array.from(ele.parentElement.children).indexOf(ele);\r\n        position_add_array_point = search_point;\r\n        ele.parentElement.insertBefore(point, ele.parentElement.children[search_point + numberPoints + 1]);\r\n      }\r\n    } else {\r\n      ele.parentElement.appendChild(point);\r\n    }\r\n\r\n    const nodeId = nodeUpdate.slice(5);\r\n    const searchConnection = this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections.findIndex(function(item, i) {\r\n      return item.node === nodeUpdateIn && item.output === input_class;\r\n    });\r\n\r\n    if(this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points === undefined) {\r\n      this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points = [];\r\n    }\r\n    //this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.push({ pos_x: pos_x, pos_y: pos_y });\r\n\r\n    if(this.reroute_fix_curvature) {\r\n      //console.log(position_add_array_point)\r\n      if(position_add_array_point > 0) {\r\n        this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.splice(position_add_array_point, 0, { pos_x: pos_x, pos_y: pos_y });\r\n      } else {\r\n        this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.push({ pos_x: pos_x, pos_y: pos_y });\r\n      }\r\n\r\n      ele.parentElement.querySelectorAll(\".main-path\").forEach((item, i) => {\r\n        item.classList.remove(\"selected\");\r\n      });\r\n\r\n    } else {\r\n      this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.push({ pos_x: pos_x, pos_y: pos_y });\r\n    }\r\n\r\n    /*\r\n    this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.sort((a,b) => (a.pos_x > b.pos_x) ? 1 : (b.pos_x > a.pos_x ) ? -1 : 0 );\r\n    this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.forEach((item, i) => {\r\n\r\n        ele.parentElement.children[i+1].setAttributeNS(null, 'cx', item.pos_x);\r\n        ele.parentElement.children[i+1].setAttributeNS(null, 'cy', item.pos_y);\r\n    });*/\r\n\r\n    this.dispatch('addReroute', nodeId);\r\n    this.updateConnectionNodes(nodeUpdate);\r\n  }\r\n\r\n  removeReroutePoint(ele) {\r\n    const nodeUpdate = ele.parentElement.classList[2].slice(9);\r\n    const nodeUpdateIn = ele.parentElement.classList[1].slice(13);\r\n    const output_class = ele.parentElement.classList[3];\r\n    const input_class = ele.parentElement.classList[4];\r\n\r\n    let numberPointPosition = Array.from(ele.parentElement.children).indexOf(ele) - 1;\r\n\r\n    const nodeId = nodeUpdate.slice(5);\r\n    const searchConnection = this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections.findIndex(function(item, i) {\r\n      return item.node === nodeUpdateIn && item.output === input_class;\r\n    });\r\n\r\n    if(this.reroute_fix_curvature) {\r\n\r\n      const numberMainPath = ele.parentElement.querySelectorAll(\".main-path\").length;\r\n      ele.parentElement.children[numberMainPath - 1].remove();\r\n      numberPointPosition -= numberMainPath;\r\n      if(numberPointPosition < 0) {\r\n        numberPointPosition = 0;\r\n      }\r\n    }\r\n    //console.log(numberPointPosition);\r\n    this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.splice(numberPointPosition, 1);\r\n\r\n    ele.remove();\r\n    this.dispatch('removeReroute', nodeId);\r\n    this.updateConnectionNodes(nodeUpdate);\r\n\r\n  }\r\n\r\n  registerNode(name, html, props = null, options = null) {\r\n    this.noderegister[name] = { html: html, props: props, options: options };\r\n  }\r\n\r\n  getNodeFromId(id) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    return JSON.parse(JSON.stringify(this.drawflow.drawflow[moduleName].data[id]));\r\n  }\r\n\r\n  getNodesFromName(name) {\r\n    var nodes = [];\r\n    const editor = this.drawflow.drawflow;\r\n    Object.keys(editor).map(function(moduleName, index) {\r\n      for(var node in editor[moduleName].data) {\r\n        if(editor[moduleName].data[node].name == name) {\r\n          nodes.push(editor[moduleName].data[node].id);\r\n        }\r\n      }\r\n    });\r\n    return nodes;\r\n  }\r\n\r\n  // nodeContents should follow this data struct {'header': '<p>Node title</p>', 'html': '<div>It s content</div>', 'footer': '<p>Node footer content</p>'}\r\n  addNode(name, inputsData, outputsData, ele_pos_x, ele_pos_y, classoverride, data, nodeContents, typenode = false) {\r\n    var newNodeId;\r\n    if(this.useuuid) {\r\n      newNodeId = this.getUuid();\r\n    } else {\r\n      newNodeId = this.nodeId;\r\n    }\r\n    const parent = document.createElement('div');\r\n    parent.classList.add(\"parent-node\");\r\n\r\n    const node = document.createElement('div');\r\n    node.innerHTML = \"\";\r\n    node.setAttribute(\"id\", \"node-\" + newNodeId);\r\n    node.classList.add(\"drawflow-node\");\r\n    if(classoverride != '') {\r\n      node.classList.add(classoverride);\r\n    }\r\n\r\n    // HEADER - Can be used to define a node header\r\n    const nodeHeader = document.createElement('div');\r\n    nodeHeader.innerHTML = nodeContents.header ? nodeContents.header : \"\";\r\n    nodeHeader.classList.add(\"drawflow-node-header\");\r\n\r\n    // CONTENT - flex column that contains inputs/outputs and content divs\r\n    const nodeContent = document.createElement('div');\r\n    nodeContent.classList.add(\"drawflow-node-content\");\r\n\r\n    // Inputs div\r\n    const inputs = document.createElement('div');\r\n    inputs.classList.add(\"inputs\");\r\n\r\n    // Outputs div\r\n    const outputs = document.createElement('div');\r\n    outputs.classList.add(\"outputs\");\r\n\r\n    const json_inputs = {};\r\n    for(let x = 0; x < inputsData.length; x++) {\r\n      const inputData = inputsData[x];\r\n      // Input hook div\r\n      const input = document.createElement('div');\r\n      input.classList.add(\"input\");\r\n      input.classList.add(\"input_\" + (x + 1));\r\n      if(inputData.type != \"\") {\r\n        input.setAttribute(\"type\", inputData.type);\r\n      }\r\n      json_inputs[\"input_\" + (x + 1)] = { \"label\": inputData.label, \"type\": inputData.type, \"connections\": [] };\r\n      inputs.appendChild(input);\r\n\r\n      // Input label div\r\n      const inputLabel = document.createElement('div');\r\n      inputLabel.classList.add(\"input-label\");\r\n      inputLabel.classList.add(\"input-label_input_\" + (x + 1));\r\n      if(inputData.type) {\r\n        inputLabel.setAttribute(\"type\", inputData.type);\r\n      }\r\n      if(inputData.label) {\r\n        inputLabel.innerHTML = inputData.label;\r\n      }\r\n      inputs.appendChild(inputLabel);\r\n    }\r\n\r\n    const json_outputs = {};\r\n    for(let x = 0; x < outputsData.length; x++) {\r\n      const outputData = outputsData[x];\r\n      // Output label div\r\n      const outputLabel = document.createElement('div');\r\n      outputLabel.classList.add(\"output-label\");\r\n      outputLabel.classList.add(\"output-label_output_\" + (x + 1));\r\n      if(outputData.type) {\r\n        outputLabel.setAttribute(\"type\", outputData.type);\r\n      }\r\n      if(outputData.label) {\r\n        outputLabel.innerHTML = outputData.label;\r\n      }\r\n      outputs.appendChild(outputLabel);\r\n\r\n      // Output hook div\r\n      const output = document.createElement('div');\r\n      output.classList.add(\"output\");\r\n      output.classList.add(\"output_\" + (x + 1));\r\n      if(outputData.type) {\r\n        output.setAttribute(\"type\", outputData.type);\r\n      }\r\n      json_outputs[\"output_\" + (x + 1)] = { \"label\": outputData.label, \"type\": outputData.type, \"connections\": [] };\r\n      outputs.appendChild(output);\r\n    }\r\n\r\n    // Content in between inputs and outputs\r\n    const content = document.createElement('div');\r\n    content.classList.add(\"drawflow_content_node\");\r\n\r\n    if(typenode === false) {\r\n      content.innerHTML = nodeContents.html;\r\n    } else if(typenode === true) {\r\n      content.appendChild(this.noderegister[nodeContents.html].html.cloneNode(true));\r\n    } else {\r\n      if(parseInt(this.render.version) === 3) {\r\n        //Vue 3\r\n        let wrapper = this.render.createApp({\r\n          render: h => this.render.h(this.noderegister[nodeContents.html].html, this.noderegister[nodeContents.html].props, this.noderegister[nodeContents.html].options)\r\n        }).mount(content);\r\n      } else {\r\n        // Vue 2\r\n        let wrapper = new this.render({\r\n          render: h => h(this.noderegister[nodeContents.html].html, { props: this.noderegister[nodeContents.html].props }), ...this.noderegister[nodeContents.html].options\r\n        }).$mount();\r\n        //\r\n        content.appendChild(wrapper.$el);\r\n      }\r\n    }\r\n\r\n    // Handle any values that need to be assigned\r\n    Object.entries(data).forEach(function(key, value) {\r\n      if(typeof key[1] === \"object\") {\r\n        insertObjectkeys(null, key[0], key[0]);\r\n      } else {\r\n        var elems = content.querySelectorAll('[df-' + key[0] + ']');\r\n        for(var i = 0; i < elems.length; i++) {\r\n          elems[i].value = key[1];\r\n        }\r\n      }\r\n    });\r\n\r\n    function insertObjectkeys(object, name, completname) {\r\n      let objectData;\r\n      if(object === null) {\r\n        objectData = data[name];\r\n      } else {\r\n        objectData = object[name];\r\n      }\r\n      if(objectData !== null) {\r\n        Object.entries(objectData).forEach(function(key, value) {\r\n          if(typeof key[1] === \"object\") {\r\n            insertObjectkeys(objectData, key[0], completname + '-' + key[0]);\r\n          } else {\r\n            var elems = content.querySelectorAll('[df-' + completname + '-' + key[0] + ']');\r\n            for(var i = 0; i < elems.length; i++) {\r\n              elems[i].value = key[1];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // FOOTER - Can be used to define a node header\r\n    const nodeFooter = document.createElement('div');\r\n    nodeFooter.innerHTML = nodeContents.footer ? nodeContents.footer : \"\";\r\n    nodeFooter.classList.add(\"drawflow-node-footer\");\r\n\r\n    // Add header to node\r\n    node.appendChild(nodeHeader);\r\n\r\n    // Add content to node\r\n    node.appendChild(nodeContent);\r\n    // Add inputs/ouputs and middle content to content div\r\n    nodeContent.appendChild(inputs);\r\n    nodeContent.appendChild(content);\r\n    nodeContent.appendChild(outputs);\r\n\r\n    // Add footer to node\r\n    node.appendChild(nodeFooter);\r\n\r\n    // Position node\r\n    node.style.top = ele_pos_y + \"px\";\r\n    node.style.left = ele_pos_x + \"px\";\r\n\r\n    // Add node to parent-node div\r\n    parent.appendChild(node);\r\n    // Add parent-node to drawflow div\r\n    this.precanvas.appendChild(parent);\r\n\r\n    // Save the node data in drawflow json\r\n    var json = {\r\n      id: newNodeId,\r\n      name: name,\r\n      data: data,\r\n      class: classoverride,\r\n      header: nodeContents.header,\r\n      html: nodeContents.html,\r\n      footer: nodeContents.footer,\r\n      typenode: typenode,\r\n      inputs: json_inputs,\r\n      outputs: json_outputs,\r\n      pos_x: ele_pos_x,\r\n      pos_y: ele_pos_y,\r\n    };\r\n    this.drawflow.drawflow[this.module].data[newNodeId] = json;\r\n    this.dispatch('nodeCreated', newNodeId);\r\n    if(!this.useuuid) {\r\n      this.nodeId++;\r\n    }\r\n    return newNodeId;\r\n  }\r\n\r\n  addNodeImport(dataNode, precanvas) {\r\n    const parent = document.createElement('div');\r\n    parent.classList.add(\"parent-node\");\r\n\r\n    const node = document.createElement('div');\r\n    node.innerHTML = \"\";\r\n    node.setAttribute(\"id\", \"node-\" + dataNode.id);\r\n    node.classList.add(\"drawflow-node\");\r\n    if(dataNode.class != '') {\r\n      node.classList.add(dataNode.class);\r\n    }\r\n\r\n    // HEADER - Can be used to define a node header\r\n    const nodeHeader = document.createElement('div');\r\n    nodeHeader.innerHTML = dataNode.header ? dataNode.header : \"\";\r\n    nodeHeader.classList.add(\"drawflow-node-header\");\r\n\r\n    // CONTENT - flex column that contains inputs/outputs and content divs\r\n    const nodeContent = document.createElement('div');\r\n    nodeContent.classList.add(\"drawflow-node-content\");\r\n\r\n    // Inputs div\r\n    const inputs = document.createElement('div');\r\n    inputs.classList.add(\"inputs\");\r\n\r\n    // Outputs div\r\n    const outputs = document.createElement('div');\r\n    outputs.classList.add(\"outputs\");\r\n\r\n    // Inputs parsing\r\n    Object.keys(dataNode.inputs).map(function(input_item, index) {\r\n      // Input hook div\r\n      const input = document.createElement('div');\r\n      input.classList.add(\"input\");\r\n      input.classList.add(input_item);\r\n      if(dataNode.inputs[input_item].type) {\r\n        input.setAttribute(\"type\", dataNode.inputs[input_item].type);\r\n      }\r\n      // Test is there is a connection then add the \"linked\" class\r\n      if(dataNode.inputs[input_item].connections.length > 0) {\r\n        input.classList.add(\"linked\");\r\n      }\r\n      inputs.appendChild(input);\r\n\r\n      // Input label div\r\n      const inputLabel = document.createElement('div');\r\n      inputLabel.classList.add(\"input-label\");\r\n      inputLabel.classList.add(\"input-label_input_\" + (index + 1));\r\n      if(dataNode.inputs[input_item].type) {\r\n        inputLabel.setAttribute(\"type\", dataNode.inputs[input_item].type);\r\n      }\r\n      if(dataNode.inputs[input_item].label) {\r\n        inputLabel.innerHTML = dataNode.inputs[input_item].label;\r\n      }\r\n      inputs.appendChild(inputLabel);\r\n\r\n      Object.keys(dataNode.inputs[input_item].connections).map(function(output_item, index) {\r\n\r\n        var connection = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n        var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n        path.classList.add(\"main-path\");\r\n        path.setAttributeNS(null, 'd', '');\r\n        // path.innerHTML = 'a';\r\n        connection.classList.add(\"connection\");\r\n        connection.classList.add(\"node_in_node-\" + dataNode.id);\r\n        connection.classList.add(\"node_out_node-\" + dataNode.inputs[input_item].connections[output_item].node);\r\n        connection.classList.add(dataNode.inputs[input_item].connections[output_item].input);\r\n        connection.classList.add(input_item);\r\n        connection.setAttribute(\"type\", dataNode.inputs[input_item].type);\r\n\r\n        connection.appendChild(path);\r\n        precanvas.appendChild(connection);\r\n\r\n      });\r\n    });\r\n    // Add a dummy div to inputs to have min width on inputs grid\r\n    const inputDummy = document.createElement('div');\r\n    inputDummy.classList.add(\"input-dummy\");\r\n    inputs.appendChild(inputDummy);\r\n\r\n    // Outputs parsing\r\n    Object.keys(dataNode.outputs).map((function(output_item, i) {\r\n      // Output label div\r\n      const outputLabel = document.createElement('div');\r\n      outputLabel.classList.add(\"output-label\");\r\n      outputLabel.classList.add(\"output-label_output_\" + (i++));\r\n      if(dataNode.outputs[output_item].type) {\r\n        outputLabel.setAttribute(\"type\", dataNode.outputs[output_item].type);\r\n      }\r\n      if(dataNode.outputs[output_item].label) {\r\n        outputLabel.innerHTML = dataNode.outputs[output_item].label;\r\n      }\r\n      outputs.appendChild(outputLabel);\r\n\r\n      // Output hook div\r\n      const output = document.createElement(\"div\");\r\n      output.classList.add(\"output\");\r\n      output.classList.add(output_item);\r\n      //Making sure to add the type\r\n      if(dataNode.outputs[output_item].type) {\r\n        output.setAttribute(\"type\", dataNode.outputs[output_item].type);\r\n      }\r\n      // Test is there is a connection then add the \"linked\" class\r\n      if(dataNode.outputs[output_item].connections.length > 0) {\r\n        output.classList.add(\"linked\");\r\n      }\r\n      outputs.appendChild(output);\r\n    }));\r\n    // Add a dummy div to outputs to have min width on outputs grid\r\n    const outputDummy = document.createElement('div');\r\n    outputDummy.classList.add(\"output-dummy\");\r\n    outputs.appendChild(outputDummy);\r\n\r\n    // Content in between inputs and outputs\r\n    const content = document.createElement('div');\r\n    content.classList.add(\"drawflow_content_node\");\r\n\r\n    if(dataNode.typenode === false) {\r\n      content.innerHTML = dataNode.html;\r\n    } else if(dataNode.typenode === true) {\r\n      content.appendChild(this.noderegister[dataNode.html].html.cloneNode(true));\r\n    } else {\r\n      if(parseInt(this.render.version) === 3) {\r\n        //Vue 3\r\n        let wrapper = this.render.createApp({\r\n          render: h => this.render.h(this.noderegister[dataNode.html].html, this.noderegister[dataNode.html].props, this.noderegister[dataNode.html].options)\r\n        }).mount(content);\r\n      } else {\r\n        //Vue 2\r\n        let wrapper = new this.render({\r\n          render: h => h(this.noderegister[dataNode.html].html, { props: this.noderegister[dataNode.html].props }), ...this.noderegister[dataNode.html].options\r\n        }).$mount();\r\n        content.appendChild(wrapper.$el);\r\n      }\r\n    }\r\n\r\n    // Handle any data values registered for this node\r\n    Object.entries(dataNode.data).forEach(function(key, value) {\r\n      if(typeof key[1] === \"object\") {\r\n        insertObjectkeys(null, key[0], key[0]);\r\n      } else {\r\n        var elems = content.querySelectorAll('[df-' + key[0] + ']');\r\n        for(var i = 0; i < elems.length; i++) {\r\n          elems[i].value = key[1];\r\n        }\r\n      }\r\n    });\r\n\r\n    function insertObjectkeys(object, name, completname) {\r\n      let objectData;\r\n      if(object === null) {\r\n        objectData = dataNode.data[name];\r\n      } else {\r\n        objectData = object[name];\r\n      }\r\n      if(objectData !== null) {\r\n        Object.entries(objectData).forEach(function(key, value) {\r\n          if(typeof key[1] === \"object\") {\r\n            insertObjectkeys(objectData, key[0], completname + '-' + key[0]);\r\n          } else {\r\n            var elems = content.querySelectorAll('[df-' + completname + '-' + key[0] + ']');\r\n            for(var i = 0; i < elems.length; i++) {\r\n              elems[i].value = key[1];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // FOOTER - Can be used to define a node header\r\n    const nodeFooter = document.createElement('div');\r\n    nodeFooter.innerHTML = dataNode.footer ? dataNode.footer : \"\";\r\n    nodeFooter.classList.add(\"drawflow-node-footer\");\r\n\r\n    // Add header to node\r\n    node.appendChild(nodeHeader);\r\n\r\n    // Add content to node\r\n    node.appendChild(nodeContent);\r\n    // Add inputs/ouputs and middle content to content div\r\n    nodeContent.appendChild(inputs);\r\n    nodeContent.appendChild(content);\r\n    nodeContent.appendChild(outputs);\r\n\r\n    // Add footer to node\r\n    node.appendChild(nodeFooter);\r\n\r\n    // Move node to right positions\r\n    node.style.top = dataNode.pos_y + \"px\";\r\n    node.style.left = dataNode.pos_x + \"px\";\r\n\r\n    // Add node to parent-node div\r\n    parent.appendChild(node);\r\n    // Add parent-node to drawflow\r\n    this.precanvas.appendChild(parent);\r\n  }\r\n\r\n  addRerouteImport(dataNode) {\r\n    const reroute_width = this.reroute_width;\r\n    const reroute_fix_curvature = this.reroute_fix_curvature;\r\n    const container = this.container;\r\n\r\n    Object.keys(dataNode.outputs).map(function(output_item, index) {\r\n      Object.keys(dataNode.outputs[output_item].connections).map(function(input_item, index) {\r\n        const points = dataNode.outputs[output_item].connections[input_item].points;\r\n        if(points !== undefined) {\r\n\r\n          points.forEach((item, i) => {\r\n            const input_id = dataNode.outputs[output_item].connections[input_item].node;\r\n            const input_class = dataNode.outputs[output_item].connections[input_item].output;\r\n            //console.log('.connection.node_in_'+input_id+'.node_out_'+dataNode.id+'.'+output_item+'.'+input_class);\r\n            const ele = container.querySelector('.connection.node_in_node-' + input_id + '.node_out_node-' + dataNode.id + '.' + output_item + '.' + input_class);\r\n\r\n            if(reroute_fix_curvature) {\r\n              if(i === 0) {\r\n                for(var z = 0; z < points.length; z++) {\r\n                  var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n                  path.classList.add(\"main-path\");\r\n                  path.setAttributeNS(null, 'd', '');\r\n                  ele.appendChild(path);\r\n\r\n                }\r\n              }\r\n            }\r\n\r\n            const point = document.createElementNS('http://www.w3.org/2000/svg', \"circle\");\r\n            point.classList.add(\"point\");\r\n            var pos_x = item.pos_x;\r\n            var pos_y = item.pos_y;\r\n\r\n            point.setAttributeNS(null, 'cx', pos_x);\r\n            point.setAttributeNS(null, 'cy', pos_y);\r\n            point.setAttributeNS(null, 'r', reroute_width);\r\n\r\n            ele.appendChild(point);\r\n\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  updateNodeValue(event) {\r\n    var attr = event.target.attributes;\r\n    for(var i = 0; i < attr.length; i++) {\r\n      if(attr[i].nodeName.startsWith('df-')) {\r\n        var keys = attr[i].nodeName.slice(3).split(\"-\");\r\n        var target = this.drawflow.drawflow[this.module].data[event.target.closest(\".drawflow_content_node\").parentElement.id.slice(5)].data;\r\n        for(var index = 0; index < keys.length - 1; index += 1) {\r\n          if(target[keys[index]] == null) {\r\n            target[keys[index]] = {};\r\n          }\r\n          target = target[keys[index]];\r\n        }\r\n        target[keys[keys.length - 1]] = event.target.value;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateNodeDataFromId(id, data) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    this.drawflow.drawflow[moduleName].data[id].data = data;\r\n    if(this.module === moduleName) {\r\n      const content = this.container.querySelector('#node-' + id);\r\n\r\n      let insertObjectkeys = function(object, name, completname) {\r\n        // function insertObjectkeys(object, name, completname) {\r\n        let objectData;\r\n        if(object === null) {\r\n          objectData = data[name];\r\n        } else {\r\n          objectData = object[name];\r\n        }\r\n\r\n        if(objectData !== null) {\r\n          Object.entries(objectData).forEach(function(key, value) {\r\n            if(typeof key[1] === \"object\") {\r\n              insertObjectkeys(objectData, key[0], completname + '-' + key[0]);\r\n            } else {\r\n              var elems = content.querySelectorAll('[df-' + completname + '-' + key[0] + ']');\r\n              for(var i = 0; i < elems.length; i++) {\r\n                elems[i].value = key[1];\r\n              }\r\n            }\r\n          });\r\n        }\r\n      };\r\n\r\n      Object.entries(data).forEach(function(key, value) {\r\n        if(typeof key[1] === \"object\") {\r\n          insertObjectkeys(null, key[0], key[0]);\r\n        } else {\r\n          var elems = content.querySelectorAll('[df-' + key[0] + ']');\r\n          for(var i = 0; i < elems.length; i++) {\r\n            elems[i].value = key[1];\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addNodeInput(id, type = undefined, label = '') {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    const infoNode = this.getNodeFromId(id);\r\n    const numInputs = Object.keys(infoNode.inputs).length;\r\n    if(this.module === moduleName) {\r\n      //Draw input\r\n      const input = document.createElement('div');\r\n      input.classList.add(\"input\");\r\n      input.classList.add(\"input_\" + (numInputs + 1));\r\n      if(type) {\r\n        input.setAttribute(\"type\", type);\r\n      }\r\n\r\n      // Input label div\r\n      const inputLabel = document.createElement('div');\r\n      inputLabel.classList.add(\"input-label\");\r\n      inputLabel.classList.add(\"input-label_input_\" + (numInputs + 1));\r\n      if(type) {\r\n        inputLabel.setAttribute(\"type\", type);\r\n      }\r\n      if(label) {\r\n        inputLabel.innerHTML = label;\r\n      }\r\n\r\n      const parent = this.container.querySelector('#node-' + id + ' .inputs');\r\n      parent.appendChild(input);\r\n      parent.appendChild(inputLabel);\r\n      this.updateConnectionNodes('node-' + id);\r\n    }\r\n    this.drawflow.drawflow[moduleName].data[id].inputs[\"input_\" + (numInputs + 1)] = {\r\n      \"label\": label,\r\n      \"type\": type,\r\n      \"connections\": []\r\n    };\r\n  }\r\n\r\n  changeNodeInputType(node_id, input_class, newType, newLabel) {\r\n    this.drawflow.drawflow[this.module].data[node_id].inputs[input_class].type = newType;\r\n    this.drawflow.drawflow[this.module].data[node_id].inputs[input_class].label = newLabel;\r\n\r\n    var divInput = document.querySelector(\"#node-\" + node_id + \" .\" + input_class);\r\n    divInput.setAttribute(\"type\", newType);\r\n\r\n    var divInputLabel = document.querySelector(\"#node-\" + node_id + \" .input-label_\" + input_class);\r\n    divInputLabel.innerHTML = newLabel;\r\n    // TODO Check connections\r\n\r\n    var connections = this.drawflow.drawflow[this.module].data[node_id].inputs[input_class].connections[0]; // FIX\r\n\r\n    if(connections && !this.checkConnectionTypes(node_id, input_class, connections.node, connections.input)) {\r\n      console.log(\"Removeing invalid connection\");\r\n      this.removeSingleConnection(connections.node, node_id, connections.input, input_class);\r\n    }\r\n  }\r\n\r\n  addNodeOutput(id, type = undefined, label = '') {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    const infoNode = this.getNodeFromId(id);\r\n    const numOutputs = Object.keys(infoNode.outputs).length;\r\n    if(this.module === moduleName) {\r\n      // Output label div\r\n      const outputLabel = document.createElement('div');\r\n      outputLabel.classList.add(\"output-label\");\r\n      outputLabel.classList.add(\"output-label_output_\" + (numOutputs + 1));\r\n      if(type) {\r\n        outputLabel.setAttribute(\"type\", type);\r\n      }\r\n      if(label) {\r\n        outputLabel.innerHTML = label;\r\n      }\r\n\r\n      //Draw output\r\n      const output = document.createElement('div');\r\n      output.classList.add(\"output\");\r\n      output.classList.add(\"output_\" + (numOutputs + 1));\r\n      if(type) {\r\n        output.setAttribute(\"type\", type);\r\n      }\r\n\r\n      const parent = this.container.querySelector('#node-' + id + ' .outputs');\r\n      parent.appendChild(outputLabel);\r\n      parent.appendChild(output);\r\n      this.updateConnectionNodes('node-' + id);\r\n    }\r\n    this.drawflow.drawflow[moduleName].data[id].outputs[\"output_\" + (numOutputs + 1)] = {\r\n      \"label\": label,\r\n      \"type\": type,\r\n      \"connections\": []\r\n    };\r\n  }\r\n\r\n  changeNodeOutputType(node_id, output_class, newType, newLabel) {\r\n    this.drawflow.drawflow[this.module].data[node_id].outputs[output_class].type = newType;\r\n    this.drawflow.drawflow[this.module].data[node_id].outputs[output_class].type = newLabel;\r\n\r\n    var divOutput = document.querySelector(\"#node-\" + node_id + \" .\" + output_class);\r\n    divOutput.setAttribute(\"type\", newType);\r\n\r\n    var divOutputLabel = document.querySelector(\"#node-\" + node_id + \" .output-label_\" + output_class);\r\n    divOutputLabel.innerHTML = newLabel;\r\n\r\n    var connections = this.drawflow.drawflow[this.module].data[node_id].outputs[output_class].connections[0]; // FIX\r\n\r\n    if(connections && !this.checkConnectionTypes(node_id, output_class, connections.node, connections.output)) {\r\n      console.log(\"Removing invalid connection\");\r\n      this.removeSingleConnection(connections.node, node_id, connections.output, output_class);\r\n    }\r\n  }\r\n\r\n  removeNodeInput(id, input_class) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    const infoNode = this.getNodeFromId(id);\r\n    if(this.module === moduleName) {\r\n      this.container.querySelector('#node-' + id + ' .inputs .input.' + input_class).remove();\r\n      this.container.querySelector('#node-' + id + ' .inputs .input-label.input-label_' + input_class).remove();\r\n    }\r\n    const removeInputs = [];\r\n    Object.keys(infoNode.inputs[input_class].connections).map(function(key, index) {\r\n      const id_output = infoNode.inputs[input_class].connections[index].node;\r\n      const output_class = infoNode.inputs[input_class].connections[index].input;\r\n      removeInputs.push({ id_output, id, output_class, input_class });\r\n    });\r\n    // Remove connections\r\n    removeInputs.forEach((item, i) => {\r\n      this.removeSingleConnection(item.id_output, item.id, item.output_class, item.input_class);\r\n    });\r\n\r\n    delete this.drawflow.drawflow[moduleName].data[id].inputs[input_class];\r\n\r\n    // Update connection\r\n    const connections = [];\r\n    const connectionsInputs = this.drawflow.drawflow[moduleName].data[id].inputs;\r\n    Object.keys(connectionsInputs).map(function(key, index) {\r\n      connections.push(connectionsInputs[key]);\r\n    });\r\n    this.drawflow.drawflow[moduleName].data[id].inputs = {};\r\n    const input_class_id = input_class.slice(6);\r\n    let nodeUpdates = [];\r\n    connections.forEach((item, i) => {\r\n      item.connections.forEach((itemx, f) => {\r\n        nodeUpdates.push(itemx);\r\n      });\r\n      this.drawflow.drawflow[moduleName].data[id].inputs['input_' + (i + 1)] = item;\r\n    });\r\n    nodeUpdates = new Set(nodeUpdates.map(e => JSON.stringify(e)));\r\n    nodeUpdates = Array.from(nodeUpdates).map(e => JSON.parse(e));\r\n\r\n    if(this.module === moduleName) {\r\n      const eles = this.container.querySelectorAll(\"#node-\" + id + \" .inputs .input\");\r\n      eles.forEach((item, i) => {\r\n        const id_class = item.classList[1].slice(6);\r\n        if(parseInt(input_class_id) < parseInt(id_class)) {\r\n          item.classList.remove('input_' + id_class);\r\n          item.classList.add('input_' + (id_class - 1));\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    nodeUpdates.forEach((itemx, i) => {\r\n      this.drawflow.drawflow[moduleName].data[itemx.node].outputs[itemx.input].connections.forEach((itemz, g) => {\r\n        if(itemz.node == id) {\r\n          const output_id = itemz.output.slice(6);\r\n          if(parseInt(input_class_id) < parseInt(output_id)) {\r\n            if(this.module === moduleName) {\r\n              const ele = this.container.querySelector(\".connection.node_in_node-\" + id + \".node_out_node-\" + itemx.node + \".\" + itemx.input + \".input_\" + output_id);\r\n              ele.classList.remove('input_' + output_id);\r\n              ele.classList.add('input_' + (output_id - 1));\r\n            }\r\n            if(itemz.points) {\r\n              this.drawflow.drawflow[moduleName].data[itemx.node].outputs[itemx.input].connections[g] = { node: itemz.node, output: 'input_' + (output_id - 1), points: itemz.points };\r\n            } else {\r\n              this.drawflow.drawflow[moduleName].data[itemx.node].outputs[itemx.input].connections[g] = { node: itemz.node, output: 'input_' + (output_id - 1) };\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n    this.updateConnectionNodes('node-' + id);\r\n  }\r\n\r\n  removeNodeOutput(id, output_class) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    const infoNode = this.getNodeFromId(id);\r\n    if(this.module === moduleName) {\r\n      this.container.querySelector('#node-' + id + ' .outputs .output.' + output_class).remove();\r\n      this.container.querySelector('#node-' + id + ' .outputs .output-label.output-label_' + output_class).remove();\r\n    }\r\n    const removeOutputs = [];\r\n    Object.keys(infoNode.outputs[output_class].connections).map(function(key, index) {\r\n      const id_input = infoNode.outputs[output_class].connections[index].node;\r\n      const input_class = infoNode.outputs[output_class].connections[index].output;\r\n      removeOutputs.push({ id, id_input, output_class, input_class });\r\n    });\r\n    // Remove connections\r\n    removeOutputs.forEach((item, i) => {\r\n      this.removeSingleConnection(item.id, item.id_input, item.output_class, item.input_class);\r\n    });\r\n\r\n    delete this.drawflow.drawflow[moduleName].data[id].outputs[output_class];\r\n\r\n    // Update connection\r\n    const connections = [];\r\n    const connectionsOuputs = this.drawflow.drawflow[moduleName].data[id].outputs;\r\n    Object.keys(connectionsOuputs).map(function(key, index) {\r\n      connections.push(connectionsOuputs[key]);\r\n    });\r\n    this.drawflow.drawflow[moduleName].data[id].outputs = {};\r\n    const output_class_id = output_class.slice(7);\r\n    let nodeUpdates = [];\r\n    connections.forEach((item, i) => {\r\n      item.connections.forEach((itemx, f) => {\r\n        nodeUpdates.push({ node: itemx.node, output: itemx.output });\r\n      });\r\n      this.drawflow.drawflow[moduleName].data[id].outputs['output_' + (i + 1)] = item;\r\n    });\r\n    nodeUpdates = new Set(nodeUpdates.map(e => JSON.stringify(e)));\r\n    nodeUpdates = Array.from(nodeUpdates).map(e => JSON.parse(e));\r\n\r\n    if(this.module === moduleName) {\r\n      const eles = this.container.querySelectorAll(\"#node-\" + id + \" .outputs .output\");\r\n      eles.forEach((item, i) => {\r\n        const id_class = item.classList[1].slice(7);\r\n        if(parseInt(output_class_id) < parseInt(id_class)) {\r\n          item.classList.remove('output_' + id_class);\r\n          item.classList.add('output_' + (id_class - 1));\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    nodeUpdates.forEach((itemx, i) => {\r\n      this.drawflow.drawflow[moduleName].data[itemx.node].inputs[itemx.output].connections.forEach((itemz, g) => {\r\n        if(itemz.node == id) {\r\n          const input_id = itemz.input.slice(7);\r\n          if(parseInt(output_class_id) < parseInt(input_id)) {\r\n            if(this.module === moduleName) {\r\n\r\n              const ele = this.container.querySelector(\".connection.node_in_node-\" + itemx.node + \".node_out_node-\" + id + \".output_\" + input_id + \".\" + itemx.output);\r\n              ele.classList.remove('output_' + input_id);\r\n              ele.classList.remove(itemx.output);\r\n              ele.classList.add('output_' + (input_id - 1));\r\n              ele.classList.add(itemx.output);\r\n            }\r\n            if(itemz.points) {\r\n              this.drawflow.drawflow[moduleName].data[itemx.node].inputs[itemx.output].connections[g] = { node: itemz.node, input: 'output_' + (input_id - 1), points: itemz.points };\r\n            } else {\r\n              this.drawflow.drawflow[moduleName].data[itemx.node].inputs[itemx.output].connections[g] = { node: itemz.node, input: 'output_' + (input_id - 1) };\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    this.updateConnectionNodes('node-' + id);\r\n  }\r\n\r\n  removeNodeId(id) {\r\n    this.removeConnectionNodeId(id);\r\n    var moduleName = this.getModuleFromNodeId(id.slice(5));\r\n    if(this.module === moduleName) {\r\n      this.container.querySelector(`#${id}`).remove();\r\n    }\r\n    delete this.drawflow.drawflow[moduleName].data[id.slice(5)];\r\n    this.dispatch('nodeRemoved', id.slice(5));\r\n  }\r\n\r\n  removeConnection() {\r\n    if(this.connection_selected != null) {\r\n      var listclass = this.connection_selected.parentElement.classList;\r\n      this.connection_selected.parentElement.remove();\r\n      //console.log(listclass);\r\n      var index_out = this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[1].slice(13) && item.output === listclass[4];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.splice(index_out, 1);\r\n\r\n      var index_in = this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[2].slice(14) && item.input === listclass[3];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.splice(index_in, 1);\r\n\r\n      // Retrieve output/input linked to the connection and remove \"linked\" class\r\n      var output = document.querySelector('#node-' + listclass[2].slice(14) + ' .' + listclass[3]);\r\n      if(output && output.classList.contains('linked') && document.querySelectorAll('.node_out_node-' + listclass[2].slice(14) + '.' + listclass[3]).length == 0) {\r\n        output.classList.remove(\"linked\");\r\n      }\r\n\r\n      var input = document.querySelector('#node-' + listclass[1].slice(13) + ' .' + listclass[4]);\r\n      if(input && input.classList.contains('linked') && document.querySelectorAll('.node_in_node-' + listclass[1].slice(13) + '.' + listclass[4]).length == 0) {\r\n        input.classList.remove(\"linked\");\r\n      }\r\n\r\n      this.dispatch('connectionRemoved', { output_id: listclass[2].slice(14), input_id: listclass[1].slice(13), output_class: listclass[3], input_class: listclass[4] });\r\n      this.connection_selected = null;\r\n    }\r\n  }\r\n\r\n  removeSingleConnection(id_output, id_input, output_class, input_class) {\r\n    var nodeOneModule = this.getModuleFromNodeId(id_output);\r\n    var nodeTwoModule = this.getModuleFromNodeId(id_input);\r\n    if(nodeOneModule === nodeTwoModule) {\r\n      // Check nodes in same module.\r\n\r\n      // Check connection exist\r\n      var exists = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function(item, i) {\r\n        return item.node == id_input && item.output === input_class;\r\n      });\r\n      if(exists > -1) {\r\n\r\n        if(this.module === nodeOneModule) {\r\n          // In same module with view.\r\n          this.container.querySelector('.connection.node_in_node-' + id_input + '.node_out_node-' + id_output + '.' + output_class + '.' + input_class).remove();\r\n        }\r\n\r\n        var index_out = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function(item, i) {\r\n          return item.node == id_input && item.output === input_class;\r\n        });\r\n        this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.splice(index_out, 1);\r\n\r\n        var index_in = this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.findIndex(function(item, i) {\r\n          return item.node == id_output && item.input === output_class;\r\n        });\r\n        this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.splice(index_in, 1);\r\n\r\n        var output = document.querySelector('#node-' + id_output + ' .' + output_class);\r\n        if(output && output.classList.contains('linked') && document.querySelectorAll('.node_out_node-' + id_output + '.' + output_class).length == 0) {\r\n          output.classList.remove(\"linked\");\r\n        }\r\n\r\n        var input = document.querySelector('#node-' + id_input + ' .' + input_class);\r\n        if(input && input.classList.contains('linked') && document.querySelectorAll('.node_in_node-' + id_input + '.' + input_class).length == 0) {\r\n          input.classList.remove(\"linked\");\r\n        }\r\n\r\n        this.dispatch('connectionRemoved', { output_id: id_output, input_id: id_input, output_class: output_class, input_class: input_class });\r\n        return true;\r\n\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  removeConnectionNodeId(id) {\r\n    const idSearchIn = 'node_in_' + id;\r\n    const idSearchOut = 'node_out_' + id;\r\n\r\n    const elemsOut = this.container.querySelectorAll(`.${idSearchOut}`);\r\n    for(let i = elemsOut.length - 1; i >= 0; i--) {\r\n      const listclass = elemsOut[i].classList;\r\n\r\n      const index_in = this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[2].slice(14) && item.input === listclass[3];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.splice(index_in, 1);\r\n\r\n      const index_out = this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[1].slice(13) && item.output === listclass[4];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.splice(index_out, 1);\r\n\r\n      elemsOut[i].remove();\r\n\r\n      const output = document.querySelector('#node-' + listclass[2].slice(14) + ' .' + listclass[3]);\r\n      if(output && output.classList.contains('linked') && document.querySelectorAll('.node_out_node-' + listclass[2].slice(14) + '.' + listclass[3]).length == 0) {\r\n        output.classList.remove(\"linked\");\r\n      }\r\n\r\n      const input = document.querySelector('#node-' + listclass[1].slice(13) + ' .' + listclass[4]);\r\n      if(input && input.classList.contains('linked') && document.querySelectorAll('.node_in_node-' + listclass[1].slice(13) + '.' + listclass[4]).length == 0) {\r\n        input.classList.remove(\"linked\");\r\n      }\r\n\r\n      this.dispatch('connectionRemoved', { output_id: listclass[2].slice(14), input_id: listclass[1].slice(13), output_class: listclass[3], input_class: listclass[4] });\r\n    }\r\n\r\n    const elemsIn = this.container.querySelectorAll(`.${idSearchIn}`);\r\n    for(let i = elemsIn.length - 1; i >= 0; i--) {\r\n\r\n      const listclass = elemsIn[i].classList;\r\n\r\n      const index_out = this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[1].slice(13) && item.output === listclass[4];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.splice(index_out, 1);\r\n\r\n      const index_in = this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[2].slice(14) && item.input === listclass[3];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.splice(index_in, 1);\r\n\r\n      elemsIn[i].remove();\r\n\r\n      const output = document.querySelector('#node-' + listclass[2].slice(14) + ' .' + listclass[3]);\r\n      if(output && output.classList.contains('linked') && document.querySelectorAll('.node_out_node-' + listclass[2].slice(14) + '.' + listclass[3]).length == 0) {\r\n        output.classList.remove(\"linked\");\r\n      }\r\n\r\n      const input = document.querySelector('#node-' + listclass[1].slice(13) + ' .' + listclass[4]);\r\n      if(input && input.classList.contains('linked') && document.querySelectorAll('.node_in_node-' + listclass[1].slice(13) + '.' + listclass[4]).length == 0) {\r\n        input.classList.remove(\"linked\");\r\n      }\r\n\r\n      this.dispatch('connectionRemoved', { output_id: listclass[2].slice(14), input_id: listclass[1].slice(13), output_class: listclass[3], input_class: listclass[4] });\r\n    }\r\n  }\r\n\r\n  getModuleFromNodeId(id) {\r\n    var nameModule;\r\n    const editor = this.drawflow.drawflow;\r\n    Object.keys(editor).map(function(moduleName, index) {\r\n      Object.keys(editor[moduleName].data).map(function(node, index2) {\r\n        if(node == id) {\r\n          nameModule = moduleName;\r\n        }\r\n      });\r\n    });\r\n    return nameModule;\r\n  }\r\n\r\n  addModule(name) {\r\n    this.drawflow.drawflow[name] = { \"data\": {} };\r\n    this.dispatch('moduleCreated', name);\r\n  }\r\n\r\n  changeModule(name) {\r\n    this.dispatch('moduleChanged', name);\r\n    this.module = name;\r\n    this.precanvas.innerHTML = \"\";\r\n    this.canvas_x = 0;\r\n    this.canvas_y = 0;\r\n    this.pos_x = 0;\r\n    this.pos_y = 0;\r\n    this.mouse_x = 0;\r\n    this.mouse_y = 0;\r\n    this.zoom = 1;\r\n    this.zoom_last_value = 1;\r\n    this.precanvas.style.transform = '';\r\n    this.import(this.drawflow);\r\n  }\r\n\r\n  removeModule(name) {\r\n    if(this.module === name) {\r\n      this.changeModule('Home');\r\n    }\r\n    delete this.drawflow.drawflow[name];\r\n    this.dispatch('moduleRemoved', name);\r\n  }\r\n\r\n  clearModuleSelected() {\r\n    this.precanvas.innerHTML = \"\";\r\n    this.drawflow.drawflow[this.module] = { \"data\": {} };\r\n  }\r\n\r\n  clear() {\r\n    this.precanvas.innerHTML = \"\";\r\n    this.drawflow = { \"drawflow\": { \"Home\": { \"data\": {} } } };\r\n  }\r\n\r\n  export() {\r\n    // const dataExport = JSON.parse(JSON.stringify(this.drawflow));\r\n    const dataExport = { ...this.drawflow };\r\n    this.dispatch('export', dataExport);\r\n    return dataExport;\r\n  }\r\n\r\n  import(data) {\r\n    this.clear();\r\n    // this.drawflow = JSON.parse(JSON.stringify(data));\r\n    this.drawflow = { ...data };\r\n    this.load();\r\n    this.dispatch('import', 'import');\r\n  }\r\n\r\n  /* Events */\r\n  on(event, callback) {\r\n    // Check if the callback is not a function\r\n    if(typeof callback !== 'function') {\r\n      console.error(`The listener callback must be a function, the given type is ${typeof callback}`);\r\n      return false;\r\n    }\r\n\r\n    // Check if the event is not a string\r\n    if(typeof event !== 'string') {\r\n      console.error(`The event name must be a string, the given type is ${typeof event}`);\r\n      return false;\r\n    }\r\n\r\n    // Check if this event not exists\r\n    if(this.events[event] === undefined) {\r\n      this.events[event] = {\r\n        listeners: []\r\n      };\r\n    }\r\n\r\n    this.events[event].listeners.push(callback);\r\n  }\r\n\r\n  removeListener(event, callback) {\r\n    // Check if this event not exists\r\n    if(this.events[event] === undefined) {\r\n      //console.error(`This event: ${event} does not exist`);\r\n      return false;\r\n    }\r\n\r\n    this.events[event].listeners = this.events[event].listeners.filter(listener => {\r\n      return listener.toString() !== callback.toString();\r\n    });\r\n  }\r\n\r\n  dispatch(event, details) {\r\n    // Check if this event not exists\r\n    if(this.events[event] === undefined) {\r\n      // console.error(`This event: ${event} does not exist`);\r\n      return false;\r\n    }\r\n\r\n    this.events[event].listeners.forEach((listener) => {\r\n      listener(details);\r\n    });\r\n  }\r\n\r\n  getUuid() {\r\n    // http://www.ietf.org/rfc/rfc4122.txt\r\n    var s = [];\r\n    var hexDigits = \"0123456789abcdef\";\r\n    for(var i = 0; i < 36; i++) {\r\n      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n    }\r\n    s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\r\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n    s[8] = s[13] = s[18] = s[23] = \"-\";\r\n\r\n    var uuid = s.join(\"\");\r\n    return uuid;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}