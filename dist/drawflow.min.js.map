{"version":3,"sources":["webpack://Drawflow/webpack/universalModuleDefinition","webpack://Drawflow/webpack/bootstrap","webpack://Drawflow/webpack/runtime/define property getters","webpack://Drawflow/webpack/runtime/hasOwnProperty shorthand","webpack://Drawflow/./src/drawflow.js"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Drawflow","container","render","events","precanvas","nodeId","ele_selected","node_selected","drag","reroute","reroute_fix_curvature","curvature","reroute_curvature_start_end","reroute_curvature","reroute_width","drag_point","editor_selected","connection","connection_ele","connection_selected","canvas_x","canvas_y","pos_x","pos_x_start","pos_y","pos_y_start","mouse_x","mouse_y","line_path","first_click","force_first_input","draggable_inputs","useuuid","select_elements","noderegister","drawflow","editor_mode","zoom","zoom_max","zoom_min","zoom_value","zoom_last_value","evCache","prevDiff","classList","add","tabIndex","document","createElement","appendChild","addEventListener","dragEnd","bind","position","click","contextmenu","zoom_enter","updateNodeValue","dblclick","onpointerdown","pointerdown_handler","onpointermove","pointermove_handler","onpointerup","pointerup_handler","onpointercancel","onpointerout","onpointerleave","load","ev","push","i","length","pointerId","curDiff","Math","abs","clientX","zoom_in","zoom_out","remove_event","splice","data","addNodeImport","addRerouteImport","updateConnectionNodes","editor","number","keys","map","moduleName","index","id","index2","parseInt","dispatch","parentElement","querySelectorAll","forEach","item","remove","e","target","closest","matches","preventDefault","button","contextmenuDel","removeReouteConnectionSelected","slice","tagName","hasAttribute","drawConnection","listclassConnection","output_id","input_id","output_class","input_class","removeNodeId","removeConnection","type","touches","clientY","e_pos_x","e_pos_y","updateConnection","x","y","style","transform","clientWidth","clientHeight","top","offsetTop","left","offsetLeft","getBoundingClientRect","setAttributeNS","nodeUpdate","nodeUpdateIn","numberPointPosition","Array","from","children","indexOf","searchConnection","outputs","connections","findIndex","node","output","points","parentSelected","ele_last","elementFromPoint","getNodeFromId","inputs","id_input","id_output","getElementsByClassName","deletebox","innerHTML","metaKey","event","delta","ctrlKey","deltaY","zoom_refresh","start_pos_x","start_pos_y","end_pos_x","end_pos_y","curvature_value","line_x","line_y","hx1","hx2","ele","createElementNS","path","eX","eY","precanvasWitdhZoom","precanvasHeightZoom","offsetWidth","offsetHeight","lineCurve","createCurvature","nodeOneModule","getModuleFromNodeId","dataNode","exist","checkOutput","connectionSearch","toString","idSearch","idSearchOut","rerouteWidth","elemsOut","querySelector","elemtsearchId_out","id_search","replace","elemtsearch","elemtsearchOut","linecurve","reoute_fix","lineCurveSearch","elemtsearchId","elemtsearchIn","itempath","elems","elemtsearchId_in","createReroutePoint","removeReroutePoint","point","position_add_array_point","numberPoints","insertBefore","search_point","undefined","numberMainPath","name","html","props","options","JSON","parse","stringify","nodes","num_in","num_out","ele_pos_x","ele_pos_y","classoverride","typenode","newNodeId","getUuid","parent","setAttribute","json_inputs","input","json_outputs","content","cloneNode","version","createApp","h","mount","wrapper","$mount","$el","insertObjectkeys","object","completname","objectData","entries","value","json","class","input_item","output_item","z","attr","attributes","nodeName","startsWith","split","infoNode","numInputs","numOutputs","removeInputs","removeSingleConnection","connectionsInputs","input_class_id","nodeUpdates","itemx","f","Set","id_class","itemz","g","removeOutputs","connectionsOuputs","output_class_id","removeConnectionNodeId","listclass","index_out","index_in","idSearchIn","elemsIn","nameModule","import","changeModule","dataExport","clear","callback","console","error","listeners","filter","listener","details","s","hexDigits","substr","floor","random","join"],"mappings":"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","file":"drawflow.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Drawflow\"] = factory();\n\telse\n\t\troot[\"Drawflow\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export default class Drawflow {\r\n  constructor(container, render = null) {\r\n    this.events = {};\r\n    this.container = container;\r\n    this.precanvas = null;\r\n    this.nodeId = 1;\r\n    this.ele_selected = null;\r\n    this.node_selected = null;\r\n    this.drag = false;\r\n    this.reroute = false;\r\n    this.reroute_fix_curvature = false;\r\n    this.curvature = 0.5;\r\n    this.reroute_curvature_start_end = 0.5;\r\n    this.reroute_curvature = 0.5;\r\n    this.reroute_width = 6;\r\n    this.drag_point = false;\r\n    this.editor_selected = false;\r\n    this.connection = false;\r\n    this.connection_ele = null;\r\n    this.connection_selected = null;\r\n    this.canvas_x = 0;\r\n    this.canvas_y = 0;\r\n    this.pos_x = 0;\r\n    this.pos_x_start = 0;\r\n    this.pos_y = 0;\r\n    this.pos_y_start = 0;\r\n    this.mouse_x = 0;\r\n    this.mouse_y = 0;\r\n    this.line_path = 5;\r\n    this.first_click = null;\r\n    this.force_first_input = false;\r\n    this.draggable_inputs = true;\r\n    this.useuuid = false;\r\n\r\n    this.select_elements = null;\r\n    this.noderegister = {};\r\n    this.render = render;\r\n    this.drawflow = { \"drawflow\": { \"Home\": { \"data\": {} } } };\r\n    // Configurable options\r\n    this.module = 'Home';\r\n    this.editor_mode = 'edit';\r\n    this.zoom = 1;\r\n    this.zoom_max = 1.6;\r\n    this.zoom_min = 0.5;\r\n    this.zoom_value = 0.1;\r\n    this.zoom_last_value = 1;\r\n\r\n    // Mobile\r\n    this.evCache = [];\r\n    this.prevDiff = -1;\r\n  }\r\n\r\n  start() {\r\n    // console.info(\"Start Drawflow!!\");\r\n    this.container.classList.add(\"parent-drawflow\");\r\n    this.container.tabIndex = 0;\r\n    this.precanvas = document.createElement('div');\r\n    this.precanvas.classList.add(\"drawflow\");\r\n    this.container.appendChild(this.precanvas);\r\n\r\n    /* Mouse and Touch Actions */\r\n    this.container.addEventListener('mouseup', this.dragEnd.bind(this));\r\n    this.container.addEventListener('mousemove', this.position.bind(this));\r\n    this.container.addEventListener('mousedown', this.click.bind(this));\r\n\r\n    this.container.addEventListener('touchend', this.dragEnd.bind(this));\r\n    this.container.addEventListener('touchmove', this.position.bind(this));\r\n    this.container.addEventListener('touchstart', this.click.bind(this));\r\n\r\n    /* Context Menu */\r\n    this.container.addEventListener('contextmenu', this.contextmenu.bind(this));\r\n    /* Delete */\r\n    this.container.addEventListener('keydown', this.key.bind(this));\r\n\r\n    /* Zoom Mouse */\r\n    this.container.addEventListener('wheel', this.zoom_enter.bind(this));\r\n    /* Update data Nodes */\r\n    this.container.addEventListener('input', this.updateNodeValue.bind(this));\r\n\r\n    this.container.addEventListener('dblclick', this.dblclick.bind(this));\r\n    /* Mobile zoom */\r\n    this.container.onpointerdown = this.pointerdown_handler.bind(this);\r\n    this.container.onpointermove = this.pointermove_handler.bind(this);\r\n    this.container.onpointerup = this.pointerup_handler.bind(this);\r\n    this.container.onpointercancel = this.pointerup_handler.bind(this);\r\n    this.container.onpointerout = this.pointerup_handler.bind(this);\r\n    this.container.onpointerleave = this.pointerup_handler.bind(this);\r\n\r\n    this.load();\r\n  }\r\n\r\n  /* Mobile zoom */\r\n  pointerdown_handler(ev) {\r\n    this.evCache.push(ev);\r\n  }\r\n\r\n  pointermove_handler(ev) {\r\n    for(var i = 0; i < this.evCache.length; i++) {\r\n      if(ev.pointerId == this.evCache[i].pointerId) {\r\n        this.evCache[i] = ev;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(this.evCache.length == 2) {\r\n      // Calculate the distance between the two pointers\r\n      var curDiff = Math.abs(this.evCache[0].clientX - this.evCache[1].clientX);\r\n\r\n      if(this.prevDiff > 100) {\r\n        if(curDiff > this.prevDiff) {\r\n          // The distance between the two pointers has increased\r\n\r\n          this.zoom_in();\r\n        }\r\n        if(curDiff < this.prevDiff) {\r\n          // The distance between the two pointers has decreased\r\n          this.zoom_out();\r\n        }\r\n      }\r\n      this.prevDiff = curDiff;\r\n    }\r\n  }\r\n\r\n  pointerup_handler(ev) {\r\n    this.remove_event(ev);\r\n    if(this.evCache.length < 2) {\r\n      this.prevDiff = -1;\r\n    }\r\n  }\r\n  remove_event(ev) {\r\n    // Remove this event from the target's cache\r\n    for(var i = 0; i < this.evCache.length; i++) {\r\n      if(this.evCache[i].pointerId == ev.pointerId) {\r\n        this.evCache.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  /* End Mobile Zoom */\r\n  load() {\r\n    for(let key in this.drawflow.drawflow[this.module].data) {\r\n      this.addNodeImport(this.drawflow.drawflow[this.module].data[key], this.precanvas);\r\n    }\r\n\r\n    if(this.reroute) {\r\n      for(let key in this.drawflow.drawflow[this.module].data) {\r\n        this.addRerouteImport(this.drawflow.drawflow[this.module].data[key]);\r\n      }\r\n    }\r\n\r\n    for(let key in this.drawflow.drawflow[this.module].data) {\r\n      this.updateConnectionNodes('node-' + key);\r\n    }\r\n\r\n    const editor = this.drawflow.drawflow;\r\n    let number = 1;\r\n    Object.keys(editor).map(function(moduleName, index) {\r\n      Object.keys(editor[moduleName].data).map(function(id, index2) {\r\n        if(parseInt(id) >= number) {\r\n          number = parseInt(id) + 1;\r\n        }\r\n      });\r\n    });\r\n    this.nodeId = number;\r\n  }\r\n\r\n  removeReouteConnectionSelected() {\r\n    this.dispatch('connectionUnselected', true);\r\n    if(this.reroute_fix_curvature) {\r\n      this.connection_selected.parentElement.querySelectorAll(\".main-path\").forEach((item, i) => {\r\n        item.classList.remove(\"selected\");\r\n      });\r\n    }\r\n  }\r\n\r\n  click(e) {\r\n    this.dispatch('click', e);\r\n    if(this.editor_mode === 'fixed') {\r\n      //return false;\r\n      if(e.target.classList[0] === 'parent-drawflow' || e.target.classList[0] === 'drawflow') {\r\n        this.ele_selected = e.target.closest(\".parent-drawflow\");\r\n      } else {\r\n        return false;\r\n      }\r\n    } else if(this.editor_mode === 'view') {\r\n      if(e.target.closest(\".drawflow\") != null || e.target.matches('.parent-drawflow')) {\r\n        this.ele_selected = e.target.closest(\".parent-drawflow\");\r\n        e.preventDefault();\r\n      }\r\n    } else {\r\n      this.first_click = e.target;\r\n      this.ele_selected = e.target;\r\n      if(e.button === 0) {\r\n        this.contextmenuDel();\r\n      }\r\n\r\n      if(e.target.closest(\".drawflow_content_node\") != null) {\r\n        this.ele_selected = e.target.closest(\".drawflow_content_node\").parentElement;\r\n      }\r\n    }\r\n    switch(this.ele_selected.classList[0]) {\r\n      case 'drawflow-node':\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          if(this.node_selected != this.ele_selected) {\r\n            this.dispatch('nodeUnselected', true);\r\n          }\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        if(this.node_selected != this.ele_selected) {\r\n          this.dispatch('nodeSelected', this.ele_selected.id.slice(5));\r\n        }\r\n        this.node_selected = this.ele_selected;\r\n        this.node_selected.classList.add(\"selected\");\r\n        if(!this.draggable_inputs) {\r\n          if(e.target.tagName !== 'INPUT' && e.target.tagName !== 'TEXTAREA' && e.target.tagName !== 'SELECT' && e.target.hasAttribute('contenteditable') !== true) {\r\n            this.drag = true;\r\n          }\r\n        } else {\r\n          if(e.target.tagName !== 'SELECT') {\r\n            this.drag = true;\r\n          }\r\n        }\r\n        break;\r\n      case 'output':\r\n        this.connection = true;\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        this.drawConnection(e.target);\r\n        break;\r\n      case 'parent-drawflow':\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        this.editor_selected = true;\r\n        break;\r\n      case 'drawflow':\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        this.editor_selected = true;\r\n        break;\r\n      case 'main-path':\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n        this.connection_selected = this.ele_selected;\r\n        this.connection_selected.classList.add(\"selected\");\r\n        const listclassConnection = this.connection_selected.parentElement.classList;\r\n        this.dispatch('connectionSelected', { output_id: listclassConnection[2].slice(14), input_id: listclassConnection[1].slice(13), output_class: listclassConnection[3], input_class: listclassConnection[4] });\r\n        if(this.reroute_fix_curvature) {\r\n          this.connection_selected.parentElement.querySelectorAll(\".main-path\").forEach((item, i) => {\r\n            item.classList.add(\"selected\");\r\n          });\r\n        }\r\n        break;\r\n      case 'point':\r\n        this.drag_point = true;\r\n        this.ele_selected.classList.add(\"selected\");\r\n        break;\r\n      case 'drawflow-delete':\r\n        if(this.node_selected) {\r\n          this.removeNodeId(this.node_selected.id);\r\n        }\r\n\r\n        if(this.connection_selected) {\r\n          this.removeConnection();\r\n        }\r\n\r\n        if(this.node_selected != null) {\r\n          this.node_selected.classList.remove(\"selected\");\r\n          this.node_selected = null;\r\n          this.dispatch('nodeUnselected', true);\r\n        }\r\n        if(this.connection_selected != null) {\r\n          this.connection_selected.classList.remove(\"selected\");\r\n          this.removeReouteConnectionSelected();\r\n          this.connection_selected = null;\r\n        }\r\n\r\n        break;\r\n      default:\r\n    }\r\n    if(e.type === \"touchstart\") {\r\n      this.pos_x = e.touches[0].clientX;\r\n      this.pos_x_start = e.touches[0].clientX;\r\n      this.pos_y = e.touches[0].clientY;\r\n      this.pos_y_start = e.touches[0].clientY;\r\n    } else {\r\n      this.pos_x = e.clientX;\r\n      this.pos_x_start = e.clientX;\r\n      this.pos_y = e.clientY;\r\n      this.pos_y_start = e.clientY;\r\n    }\r\n    this.dispatch('clickEnd', e);\r\n  }\r\n\r\n  position(e) {\r\n    let e_pos_x, e_pos_y;\r\n    if(e.type === \"touchmove\") {\r\n      e_pos_x = e.touches[0].clientX;\r\n      e_pos_y = e.touches[0].clientY;\r\n    } else {\r\n      e_pos_x = e.clientX;\r\n      e_pos_y = e.clientY;\r\n    }\r\n\r\n    if(this.connection) {\r\n      this.updateConnection(e_pos_x, e_pos_y);\r\n    }\r\n\r\n    if(this.editor_selected) {\r\n      /*if (e.ctrlKey) {\r\n        this.selectElements(e_pos_x, e_pos_y);\r\n      } else { */\r\n      const x = this.canvas_x + (-(this.pos_x - e_pos_x));\r\n      const y = this.canvas_y + (-(this.pos_y - e_pos_y));\r\n      // console.log(canvas_x +' - ' +pos_x + ' - '+ e_pos_x + ' - ' + x);\r\n      this.dispatch('translate', { x: x, y: y });\r\n      this.precanvas.style.transform = \"translate(\" + x + \"px, \" + y + \"px) scale(\" + this.zoom + \")\";\r\n      //}\r\n    }\r\n\r\n    if(this.drag) {\r\n\r\n      const x = (this.pos_x - e_pos_x) * this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom);\r\n      const y = (this.pos_y - e_pos_y) * this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom);\r\n      this.pos_x = e_pos_x;\r\n      this.pos_y = e_pos_y;\r\n\r\n      this.ele_selected.style.top = (this.ele_selected.offsetTop - y) + \"px\";\r\n      this.ele_selected.style.left = (this.ele_selected.offsetLeft - x) + \"px\";\r\n\r\n      this.drawflow.drawflow[this.module].data[this.ele_selected.id.slice(5)].pos_x = (this.ele_selected.offsetLeft - x);\r\n      this.drawflow.drawflow[this.module].data[this.ele_selected.id.slice(5)].pos_y = (this.ele_selected.offsetTop - y);\r\n\r\n      this.updateConnectionNodes(this.ele_selected.id);\r\n    }\r\n\r\n    if(this.drag_point) {\r\n\r\n      // const x = (this.pos_x - e_pos_x) * this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom);\r\n      // const y = (this.pos_y - e_pos_y) * this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom);\r\n      this.pos_x = e_pos_x;\r\n      this.pos_y = e_pos_y;\r\n\r\n      var pos_x = this.pos_x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)) - (this.precanvas.getBoundingClientRect().x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)));\r\n      var pos_y = this.pos_y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)) - (this.precanvas.getBoundingClientRect().y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)));\r\n\r\n      this.ele_selected.setAttributeNS(null, 'cx', pos_x);\r\n      this.ele_selected.setAttributeNS(null, 'cy', pos_y);\r\n\r\n      const nodeUpdate = this.ele_selected.parentElement.classList[2].slice(9);\r\n      const nodeUpdateIn = this.ele_selected.parentElement.classList[1].slice(13);\r\n      const output_class = this.ele_selected.parentElement.classList[3];\r\n      const input_class = this.ele_selected.parentElement.classList[4];\r\n\r\n      let numberPointPosition = Array.from(this.ele_selected.parentElement.children).indexOf(this.ele_selected) - 1;\r\n\r\n      if(this.reroute_fix_curvature) {\r\n        const numberMainPath = this.ele_selected.parentElement.querySelectorAll(\".main-path\").length - 1;\r\n\r\n        numberPointPosition -= numberMainPath;\r\n        if(numberPointPosition < 0) {\r\n          numberPointPosition = 0;\r\n        }\r\n      }\r\n\r\n      const nodeId = nodeUpdate.slice(5);\r\n      const searchConnection = this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections.findIndex(function(item, i) {\r\n        return item.node === nodeUpdateIn && item.output === input_class;\r\n      });\r\n\r\n      this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points[numberPointPosition] = { pos_x: pos_x, pos_y: pos_y };\r\n\r\n      const parentSelected = this.ele_selected.parentElement.classList[2].slice(9);\r\n\r\n      /*this.drawflow.drawflow[this.module].data[this.ele_selected.id.slice(5)].pos_x = (this.ele_selected.offsetLeft - x);\r\n      this.drawflow.drawflow[this.module].data[this.ele_selected.id.slice(5)].pos_y = (this.ele_selected.offsetTop - y);\r\n      */\r\n      this.updateConnectionNodes(parentSelected);\r\n    }\r\n\r\n    if(e.type === \"touchmove\") {\r\n      this.mouse_x = e_pos_x;\r\n      this.mouse_y = e_pos_y;\r\n    }\r\n    this.dispatch('mouseMove', { x: e_pos_x, y: e_pos_y });\r\n  }\r\n\r\n  dragEnd(e) {\r\n    let e_pos_x, e_pos_y, ele_last;\r\n    if(this.select_elements != null) {\r\n      this.select_elements.remove();\r\n      this.select_elements = null;\r\n    }\r\n\r\n    if(e.type === \"touchend\") {\r\n      e_pos_x = this.mouse_x;\r\n      e_pos_y = this.mouse_y;\r\n      ele_last = document.elementFromPoint(e_pos_x, e_pos_y);\r\n    } else {\r\n      e_pos_x = e.clientX;\r\n      e_pos_y = e.clientY;\r\n      ele_last = e.target;\r\n    }\r\n\r\n    if(this.drag) {\r\n      if(this.pos_x_start != e_pos_x || this.pos_y_start != e_pos_y) {\r\n        this.dispatch('nodeMoved', this.ele_selected.id.slice(5));\r\n      }\r\n    }\r\n\r\n    if(this.drag_point) {\r\n      this.ele_selected.classList.remove(\"selected\");\r\n    }\r\n\r\n    if(this.editor_selected) {\r\n      this.canvas_x = this.canvas_x + (-(this.pos_x - e_pos_x));\r\n      this.canvas_y = this.canvas_y + (-(this.pos_y - e_pos_y));\r\n      this.editor_selected = false;\r\n    }\r\n    if(this.connection === true) {\r\n      //console.log(ele_last)\r\n      let input_id, input_class;\r\n      if(ele_last.classList[0] === 'input' || (this.force_first_input && (ele_last.closest(\".drawflow_content_node\") != null || ele_last.classList[0] === 'drawflow-node'))) {\r\n\r\n        if(this.force_first_input && (ele_last.closest(\".drawflow_content_node\") != null || ele_last.classList[0] === 'drawflow-node')) {\r\n          if(ele_last.closest(\".drawflow_content_node\") != null) {\r\n            input_id = ele_last.closest(\".drawflow_content_node\").parentElement.id;\r\n          } else {\r\n            input_id = ele_last.id;\r\n          }\r\n          if(Object.keys(this.getNodeFromId(input_id.slice(5)).inputs).length === 0) {\r\n            input_class = false;\r\n          } else {\r\n            input_class = \"input_1\";\r\n          }\r\n\r\n        } else {\r\n          // Fix connection (get input node id if none)\r\n          input_id = ele_last.parentElement.parentElement.id;\r\n          input_class = ele_last.classList[1];\r\n        }\r\n        // Get ouput node id\r\n        var output_id = this.ele_selected.parentElement.parentElement.id;\r\n        var output_class = this.ele_selected.classList[1];\r\n\r\n        if(output_id !== input_id && input_class !== false) {\r\n          // This checks if there is already a connection between the same ouput/input\r\n          if(this.container.querySelectorAll('.connection.node_in_' + input_id + '.node_out_' + output_id + '.' + output_class + '.' + input_class).length === 0) {\r\n            // Conection no exist save connection\r\n            this.connection_ele.classList.add(\"node_in_\" + input_id);\r\n            this.connection_ele.classList.add(\"node_out_\" + output_id);\r\n            this.connection_ele.classList.add(output_class);\r\n            this.connection_ele.classList.add(input_class);\r\n            var id_input = input_id.slice(5);\r\n            var id_output = output_id.slice(5);\r\n\r\n            this.drawflow.drawflow[this.module].data[id_output].outputs[output_class].connections.push({ \"node\": id_input, \"output\": input_class });\r\n            this.drawflow.drawflow[this.module].data[id_input].inputs[input_class].connections.push({ \"node\": id_output, \"input\": output_class });\r\n\r\n\r\n\r\n            this.updateConnectionNodes('node-' + id_output);\r\n            this.updateConnectionNodes('node-' + id_input);\r\n            this.dispatch('connectionCreated', { output_id: id_output, input_id: id_input, output_class: output_class, input_class: input_class });\r\n\r\n          } else {\r\n            this.dispatch('connectionCancel', true);\r\n            this.connection_ele.remove();\r\n          }\r\n\r\n          this.connection_ele = null;\r\n        } else {\r\n          // Connection exists Remove Connection;\r\n          this.dispatch('connectionCancel', true);\r\n          this.connection_ele.remove();\r\n          this.connection_ele = null;\r\n        }\r\n\r\n      } else {\r\n        // Remove Connection;\r\n        this.dispatch('connectionCancel', true);\r\n        this.connection_ele.remove();\r\n        this.connection_ele = null;\r\n      }\r\n    }\r\n\r\n    this.drag = false;\r\n    this.drag_point = false;\r\n    this.connection = false;\r\n    this.ele_selected = null;\r\n    this.editor_selected = false;\r\n\r\n  }\r\n  contextmenu(e) {\r\n    this.dispatch('contextmenu', e);\r\n    e.preventDefault();\r\n    if(this.editor_mode === 'fixed' || this.editor_mode === 'view') {\r\n      return false;\r\n    }\r\n    if(this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\r\n      this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\r\n    }\r\n    if(this.node_selected || this.connection_selected) {\r\n      var deletebox = document.createElement('div');\r\n      deletebox.classList.add(\"drawflow-delete\");\r\n      deletebox.innerHTML = \"x\";\r\n      if(this.node_selected) {\r\n        this.node_selected.appendChild(deletebox);\r\n      }\r\n      if(this.connection_selected) {\r\n        deletebox.style.top = e.clientY * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)) - (this.precanvas.getBoundingClientRect().y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom))) + \"px\";\r\n        deletebox.style.left = e.clientX * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)) - (this.precanvas.getBoundingClientRect().x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom))) + \"px\";\r\n\r\n        this.precanvas.appendChild(deletebox);\r\n      }\r\n    }\r\n  }\r\n  contextmenuDel() {\r\n    if(this.precanvas.getElementsByClassName(\"drawflow-delete\").length) {\r\n      this.precanvas.getElementsByClassName(\"drawflow-delete\")[0].remove();\r\n    }\r\n  }\r\n\r\n  key(e) {\r\n    this.dispatch('keydown', e);\r\n    if(this.editor_mode === 'fixed' || this.editor_mode === 'view') {\r\n      return false;\r\n    }\r\n    if(e.key === 'Delete' || (e.key === 'Backspace' && e.metaKey)) {\r\n      if(this.node_selected != null) {\r\n        if(this.first_click.tagName !== 'INPUT' && this.first_click.tagName !== 'TEXTAREA' && this.first_click.hasAttribute('contenteditable') !== true) {\r\n          this.removeNodeId(this.node_selected.id);\r\n        }\r\n      }\r\n      if(this.connection_selected != null) {\r\n        this.removeConnection();\r\n      }\r\n    }\r\n  }\r\n\r\n  zoom_enter(event, delta) {\r\n    if(event.ctrlKey) {\r\n      event.preventDefault();\r\n      if(event.deltaY > 0) {\r\n        // Zoom Out\r\n        this.zoom_out();\r\n      } else {\r\n        // Zoom In\r\n        this.zoom_in();\r\n      }\r\n      //this.precanvas.style.transform = \"translate(\"+this.canvas_x+\"px, \"+this.canvas_y+\"px) scale(\"+this.zoom+\")\";\r\n    }\r\n  }\r\n  zoom_refresh() {\r\n    this.dispatch('zoom', this.zoom);\r\n    this.canvas_x = (this.canvas_x / this.zoom_last_value) * this.zoom;\r\n    this.canvas_y = (this.canvas_y / this.zoom_last_value) * this.zoom;\r\n    this.zoom_last_value = this.zoom;\r\n    this.precanvas.style.transform = \"translate(\" + this.canvas_x + \"px, \" + this.canvas_y + \"px) scale(\" + this.zoom + \")\";\r\n  }\r\n  zoom_in() {\r\n    if(this.zoom < this.zoom_max) {\r\n      this.zoom += this.zoom_value;\r\n      this.zoom_refresh();\r\n    }\r\n  }\r\n  zoom_out() {\r\n    if(this.zoom > this.zoom_min) {\r\n      this.zoom -= this.zoom_value;\r\n      this.zoom_refresh();\r\n    }\r\n  }\r\n  zoom_reset() {\r\n    if(this.zoom != 1) {\r\n      this.zoom = 1;\r\n      this.zoom_refresh();\r\n    }\r\n  }\r\n\r\n  createCurvature(start_pos_x, start_pos_y, end_pos_x, end_pos_y, curvature_value, type) {\r\n    var line_x = start_pos_x;\r\n    var line_y = start_pos_y;\r\n    var x = end_pos_x;\r\n    var y = end_pos_y;\r\n    var curvature = curvature_value;\r\n    //type openclose open close other\r\n    let hx1, hx2;\r\n\r\n    switch(type) {\r\n      case 'open':\r\n        if(start_pos_x >= end_pos_x) {\r\n          hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n          hx2 = x - Math.abs(x - line_x) * (curvature * -1);\r\n        } else {\r\n          hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n          hx2 = x - Math.abs(x - line_x) * curvature;\r\n        }\r\n        return ' M ' + line_x + ' ' + line_y + ' C ' + hx1 + ' ' + line_y + ' ' + hx2 + ' ' + y + ' ' + x + '  ' + y;\r\n      // break;\r\n\r\n      case 'close':\r\n        if(start_pos_x >= end_pos_x) {\r\n          hx1 = line_x + Math.abs(x - line_x) * (curvature * -1);\r\n          hx2 = x - Math.abs(x - line_x) * curvature;\r\n        } else {\r\n          hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n          hx2 = x - Math.abs(x - line_x) * curvature;\r\n        }\r\n        return ' M ' + line_x + ' ' + line_y + ' C ' + hx1 + ' ' + line_y + ' ' + hx2 + ' ' + y + ' ' + x + '  ' + y;\r\n      // break;\r\n\r\n      case 'other':\r\n        if(start_pos_x >= end_pos_x) {\r\n          hx1 = line_x + Math.abs(x - line_x) * (curvature * -1);\r\n          hx2 = x - Math.abs(x - line_x) * (curvature * -1);\r\n        } else {\r\n          hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n          hx2 = x - Math.abs(x - line_x) * curvature;\r\n        }\r\n        return ' M ' + line_x + ' ' + line_y + ' C ' + hx1 + ' ' + line_y + ' ' + hx2 + ' ' + y + ' ' + x + '  ' + y;\r\n      // break;\r\n\r\n      default:\r\n\r\n        hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n        hx2 = x - Math.abs(x - line_x) * curvature;\r\n\r\n        return ' M ' + line_x + ' ' + line_y + ' C ' + hx1 + ' ' + line_y + ' ' + hx2 + ' ' + y + ' ' + x + '  ' + y;\r\n    }\r\n\r\n  }\r\n\r\n  drawConnection(ele) {\r\n    var connection = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n    this.connection_ele = connection;\r\n    var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n    path.classList.add(\"main-path\");\r\n    path.setAttributeNS(null, 'd', '');\r\n    // path.innerHTML = 'a';\r\n    connection.classList.add(\"connection\");\r\n    connection.appendChild(path);\r\n    this.precanvas.appendChild(connection);\r\n    var id_output = ele.parentElement.parentElement.id.slice(5);\r\n    var output_class = ele.classList[1];\r\n    this.dispatch('connectionStart', { output_id: id_output, output_class: output_class });\r\n\r\n  }\r\n\r\n  updateConnection(eX, eY) {\r\n    const precanvas = this.precanvas;\r\n    const zoom = this.zoom;\r\n    let precanvasWitdhZoom = precanvas.clientWidth / (precanvas.clientWidth * zoom);\r\n    precanvasWitdhZoom = precanvasWitdhZoom || 0;\r\n    let precanvasHeightZoom = precanvas.clientHeight / (precanvas.clientHeight * zoom);\r\n    precanvasHeightZoom = precanvasHeightZoom || 0;\r\n    var path = this.connection_ele.children[0];\r\n\r\n    /*var line_x = this.ele_selected.offsetWidth/2 + this.line_path/2 + this.ele_selected.parentElement.parentElement.offsetLeft + this.ele_selected.offsetLeft;\r\n    var line_y = this.ele_selected.offsetHeight/2 + this.line_path/2 + this.ele_selected.parentElement.parentElement.offsetTop + this.ele_selected.offsetTop;*/\r\n\r\n    var line_x = this.ele_selected.offsetWidth / 2 + (this.ele_selected.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n    var line_y = this.ele_selected.offsetHeight / 2 + (this.ele_selected.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n    var x = eX * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)) - (this.precanvas.getBoundingClientRect().x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)));\r\n    var y = eY * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)) - (this.precanvas.getBoundingClientRect().y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)));\r\n\r\n    /*\r\n    var curvature = 0.5;\r\n    var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n    var hx2 = x - Math.abs(x - line_x) * curvature;\r\n    */\r\n\r\n    //path.setAttributeNS(null, 'd', 'M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y);\r\n    var curvature = this.curvature;\r\n    var lineCurve = this.createCurvature(line_x, line_y, x, y, curvature, 'openclose');\r\n    path.setAttributeNS(null, 'd', lineCurve);\r\n\r\n  }\r\n\r\n  addConnection(id_output, id_input, output_class, input_class) {\r\n    var nodeOneModule = this.getModuleFromNodeId(id_output);\r\n    var nodeTwoModule = this.getModuleFromNodeId(id_input);\r\n    if(nodeOneModule === nodeTwoModule) {\r\n\r\n      var dataNode = this.getNodeFromId(id_output);\r\n      var exist = false;\r\n      for(var checkOutput in dataNode.outputs[output_class].connections) {\r\n        var connectionSearch = dataNode.outputs[output_class].connections[checkOutput];\r\n        if(connectionSearch.node == id_input && connectionSearch.output == input_class) {\r\n          exist = true;\r\n        }\r\n      }\r\n      // Check connection exist\r\n      if(exist === false) {\r\n        //Create Connection\r\n        this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.push({ \"node\": id_input.toString(), \"output\": input_class });\r\n        this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.push({ \"node\": id_output.toString(), \"input\": output_class });\r\n\r\n        if(this.module === nodeOneModule) {\r\n          //Draw connection\r\n          var connection = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n          var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n          path.classList.add(\"main-path\");\r\n          path.setAttributeNS(null, 'd', '');\r\n          // path.innerHTML = 'a';\r\n          connection.classList.add(\"connection\");\r\n          connection.classList.add(\"node_in_node-\" + id_input);\r\n          connection.classList.add(\"node_out_node-\" + id_output);\r\n          connection.classList.add(output_class);\r\n          connection.classList.add(input_class);\r\n\r\n          connection.appendChild(path);\r\n          this.precanvas.appendChild(connection);\r\n          this.updateConnectionNodes('node-' + id_output);\r\n          this.updateConnectionNodes('node-' + id_input);\r\n        }\r\n        this.dispatch('connectionCreated', { output_id: id_output, input_id: id_input, output_class: output_class, input_class: input_class });\r\n      }\r\n    }\r\n  }\r\n\r\n  updateConnectionNodes(id) {\r\n\r\n    // Aquí nos quedamos;\r\n    const idSearch = 'node_in_' + id;\r\n    const idSearchOut = 'node_out_' + id;\r\n    // var line_path = this.line_path/2;\r\n    const container = this.container;\r\n    const precanvas = this.precanvas;\r\n    const curvature = this.curvature;\r\n    const createCurvature = this.createCurvature;\r\n    const reroute_curvature = this.reroute_curvature;\r\n    const reroute_curvature_start_end = this.reroute_curvature_start_end;\r\n    const reroute_fix_curvature = this.reroute_fix_curvature;\r\n    const rerouteWidth = this.reroute_width;\r\n    const zoom = this.zoom;\r\n    let precanvasWitdhZoom = precanvas.clientWidth / (precanvas.clientWidth * zoom);\r\n    precanvasWitdhZoom = precanvasWitdhZoom || 0;\r\n    let precanvasHeightZoom = precanvas.clientHeight / (precanvas.clientHeight * zoom);\r\n    precanvasHeightZoom = precanvasHeightZoom || 0;\r\n\r\n    const elemsOut = container.querySelectorAll(`.${idSearchOut}`);\r\n\r\n    Object.keys(elemsOut).map(function(item, index) {\r\n      if(elemsOut[item].querySelector('.point') === null) {\r\n\r\n        var elemtsearchId_out = container.querySelector(`#${id}`);\r\n\r\n        var id_search = elemsOut[item].classList[1].replace('node_in_', '');\r\n        var elemtsearchId = container.querySelector(`#${id_search}`);\r\n\r\n        var elemtsearch = elemtsearchId.querySelectorAll('.' + elemsOut[item].classList[4])[0];\r\n\r\n        /*var eX = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n        var eY = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n        var eX = elemtsearch.offsetWidth / 2 + (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n        var eY = elemtsearch.offsetHeight / 2 + (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n        var elemtsearchOut = elemtsearchId_out.querySelectorAll('.' + elemsOut[item].classList[3])[0];\r\n        /*var line_x = elemtsearchId_out.offsetLeft + elemtsearchId_out.querySelectorAll('.'+elemsOut[item].classList[3])[0].offsetLeft + elemtsearchId_out.querySelectorAll('.'+elemsOut[item].classList[3])[0].offsetWidth/2 + line_path;\r\n        var line_y = elemtsearchId_out.offsetTop + elemtsearchId_out.querySelectorAll('.'+elemsOut[item].classList[3])[0].offsetTop + elemtsearchId_out.querySelectorAll('.'+elemsOut[item].classList[3])[0].offsetHeight/2 + line_path;*/\r\n        var line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n        var line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n        var x = eX;\r\n        var y = eY;\r\n        /*\r\n        var curvature = 0.5;\r\n        var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n        var hx2 = x - Math.abs(x - line_x) * curvature;\r\n        // console.log('M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y );\r\n        elemsOut[item].children[0].setAttributeNS(null, 'd', 'M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y );\r\n        */\r\n\r\n        const lineCurve = createCurvature(line_x, line_y, x, y, curvature, 'openclose');\r\n        elemsOut[item].children[0].setAttributeNS(null, 'd', lineCurve);\r\n      } else {\r\n        const points = elemsOut[item].querySelectorAll('.point');\r\n        let linecurve = '';\r\n        const reoute_fix = [];\r\n        points.forEach((item, i) => {\r\n          if(i === 0 && ((points.length - 1) === 0)) {\r\n            // M line_x line_y C hx1 line_y hx2 y x y\r\n            let elemtsearchId_out = container.querySelector(`#${id}`);\r\n            let elemtsearch = item;\r\n\r\n            let eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n\r\n            /*var line_x = elemtsearchId_out.offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetWidth/2 + line_path;\r\n            var line_y = elemtsearchId_out.offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetHeight/2 + line_path;*/\r\n            let elemtsearchOut = elemtsearchId_out.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n            let line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n            let x = eX;\r\n            let y = eY;\r\n\r\n            /*var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'open');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n            //var elemtsearchId_out = document.getElementById(id);\r\n            elemtsearchId_out = item;\r\n            let id_search = item.parentElement.classList[1].replace('node_in_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n\r\n            /*var eX = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var eY = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchIn = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n            eX = elemtsearchIn.offsetWidth / 2 + (elemtsearchIn.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            eY = elemtsearchIn.offsetHeight / 2 + (elemtsearchIn.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            x = eX;\r\n            y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;\r\n            */\r\n            lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'close');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else if(i === 0) {\r\n            //console.log(\"Primero\");\r\n            // M line_x line_y C hx1 line_y hx2 y x y\r\n            // FIRST\r\n            let elemtsearchId_out = container.querySelector(`#${id}`);\r\n            let elemtsearch = item;\r\n\r\n            let eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n\r\n            /*var line_x = elemtsearchId_out.offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetWidth/2 + line_path;\r\n            var line_y = elemtsearchId_out.offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[3])[0].offsetHeight/2 + line_path;*/\r\n            let elemtsearchOut = elemtsearchId_out.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n            let line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'open');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n            // SECOND\r\n            elemtsearchId_out = item;\r\n            elemtsearch = points[i + 1];\r\n\r\n            eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            x = eX;\r\n            y = eY;\r\n            /*\r\n            var curvature = reroute_curvature;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature, 'other');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else if(i === (points.length - 1)) {\r\n            //console.log(\"Final\");\r\n            let elemtsearchId_out = item;\r\n\r\n            let id_search = item.parentElement.classList[1].replace('node_in_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            let elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n\r\n            /*var eX = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var eY = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchIn = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n            let eX = elemtsearchIn.offsetWidth / 2 + (elemtsearchIn.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let eY = elemtsearchIn.offsetHeight / 2 + (elemtsearchIn.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n            let line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * (precanvas.clientWidth / (precanvas.clientWidth * zoom)) + rerouteWidth;\r\n            let line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * (precanvas.clientHeight / (precanvas.clientHeight * zoom)) + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'close');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else {\r\n            let elemtsearchId_out = item;\r\n            let elemtsearch = points[i + 1];\r\n\r\n            let eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * (precanvas.clientWidth / (precanvas.clientWidth * zoom)) + rerouteWidth;\r\n            let eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * (precanvas.clientHeight / (precanvas.clientHeight * zoom)) + rerouteWidth;\r\n            let line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * (precanvas.clientWidth / (precanvas.clientWidth * zoom)) + rerouteWidth;\r\n            let line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * (precanvas.clientHeight / (precanvas.clientHeight * zoom)) + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = reroute_curvature;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature, 'other');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n          }\r\n\r\n        });\r\n        if(reroute_fix_curvature) {\r\n          reoute_fix.forEach((itempath, i) => {\r\n            elemsOut[item].children[i].setAttributeNS(null, 'd', itempath);\r\n          });\r\n\r\n        } else {\r\n          elemsOut[item].children[0].setAttributeNS(null, 'd', linecurve);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    const elems = container.querySelectorAll(`.${idSearch}`);\r\n    Object.keys(elems).map(function(item, index) {\r\n      // console.log(\"In\")\r\n      if(elems[item].querySelector('.point') === null) {\r\n        var elemtsearchId_in = container.querySelector(`#${id}`);\r\n\r\n        var id_search = elems[item].classList[2].replace('node_out_', '');\r\n        var elemtsearchId = container.querySelector(`#${id_search}`);\r\n        var elemtsearch = elemtsearchId.querySelectorAll('.' + elems[item].classList[3])[0];\r\n\r\n        /*var line_x = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n        var line_y = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n\r\n        var line_x = elemtsearch.offsetWidth / 2 + (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n        var line_y = elemtsearch.offsetHeight / 2 + (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n        /*var x = elemtsearchId_in.offsetLeft + elemtsearchId_in.querySelectorAll('.'+elems[item].classList[4])[0].offsetLeft + elemtsearchId_in.querySelectorAll('.'+elems[item].classList[4])[0].offsetWidth/2 + line_path;\r\n        var y = elemtsearchId_in.offsetTop + elemtsearchId_in.querySelectorAll('.'+elems[item].classList[4])[0].offsetTop + elemtsearchId_in.querySelectorAll('.'+elems[item].classList[4])[0].offsetHeight/2 + line_path;*/\r\n        elemtsearchId_in = elemtsearchId_in.querySelectorAll('.' + elems[item].classList[4])[0];\r\n        var x = elemtsearchId_in.offsetWidth / 2 + (elemtsearchId_in.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n        var y = elemtsearchId_in.offsetHeight / 2 + (elemtsearchId_in.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n        /*\r\n        var curvature = 0.5;\r\n        var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n        var hx2 = x - Math.abs(x - line_x) * curvature;\r\n        // console.log('M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y );\r\n        elems[item].children[0].setAttributeNS(null, 'd', 'M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y );*/\r\n        const lineCurve = createCurvature(line_x, line_y, x, y, curvature, 'openclose');\r\n        elems[item].children[0].setAttributeNS(null, 'd', lineCurve);\r\n\r\n      } else {\r\n        const points = elems[item].querySelectorAll('.point');\r\n        let linecurve = '';\r\n        const reoute_fix = [];\r\n        points.forEach((item, i) => {\r\n          if(i === 0 && ((points.length - 1) === 0)) {\r\n            // M line_x line_y C hx1 line_y hx2 y x y\r\n            let elemtsearchId_out = container.querySelector(`#${id}`);\r\n            let elemtsearch = item;\r\n\r\n            let line_x = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let line_y = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n\r\n            let elemtsearchIn = elemtsearchId_out.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n            let eX = elemtsearchIn.offsetWidth / 2 + (elemtsearchIn.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let eY = elemtsearchIn.offsetHeight / 2 + (elemtsearchIn.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            /*var eX = elemtsearchId_out.offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[4])[0].offsetLeft + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[4])[0].offsetWidth/2 + line_path;\r\n            var eY = elemtsearchId_out.offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[4])[0].offsetTop + elemtsearchId_out.querySelectorAll('.'+item.parentElement.classList[4])[0].offsetHeight/2 + line_path;*/\r\n\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'close');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n            //var elemtsearchId_out = document.getElementById(id);\r\n            elemtsearchId_out = item;\r\n            let id_search = item.parentElement.classList[2].replace('node_out_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n\r\n            /*var line_x = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var line_y = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchOut = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n            line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            eX = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            eY = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            x = eX;\r\n            y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'open');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else if(i === 0) {\r\n            // M line_x line_y C hx1 line_y hx2 y x y\r\n            // FIRST\r\n            let elemtsearchId_out = item;\r\n            let id_search = item.parentElement.classList[2].replace('node_out_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            let elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n\r\n            /*var line_x = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var line_y = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchOut = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[3])[0];\r\n            let line_x = elemtsearchOut.offsetWidth / 2 + (elemtsearchOut.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let line_y = elemtsearchOut.offsetHeight / 2 + (elemtsearchOut.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            let eX = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let eY = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'open');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n            // SECOND\r\n            elemtsearchId_out = item;\r\n            elemtsearch = points[i + 1];\r\n\r\n            eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            x = eX;\r\n            y = eY;\r\n\r\n            /*\r\n            var curvature = reroute_curvature;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature, 'other');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else if(i === (points.length - 1)) {\r\n\r\n            let elemtsearchId_out = item;\r\n\r\n            let id_search = item.parentElement.classList[1].replace('node_in_', '');\r\n            let elemtsearchId = container.querySelector(`#${id_search}`);\r\n            let elemtsearch = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n\r\n            /*var eX = elemtsearch.offsetWidth/2 + line_path + elemtsearch.parentElement.parentElement.offsetLeft + elemtsearch.offsetLeft;\r\n            var eY = elemtsearch.offsetHeight/2 + line_path + elemtsearch.parentElement.parentElement.offsetTop + elemtsearch.offsetTop;*/\r\n            let elemtsearchIn = elemtsearchId.querySelectorAll('.' + item.parentElement.classList[4])[0];\r\n            let eX = elemtsearchIn.offsetWidth / 2 + (elemtsearchIn.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom;\r\n            let eY = elemtsearchIn.offsetHeight / 2 + (elemtsearchIn.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom;\r\n\r\n            let line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = 0.5;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;*/\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature_start_end, 'close');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n\r\n          } else {\r\n\r\n            let elemtsearchId_out = item;\r\n            let elemtsearch = points[i + 1];\r\n\r\n            let eX = (elemtsearch.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let eY = (elemtsearch.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            let line_x = (elemtsearchId_out.getBoundingClientRect().x - precanvas.getBoundingClientRect().x) * precanvasWitdhZoom + rerouteWidth;\r\n            let line_y = (elemtsearchId_out.getBoundingClientRect().y - precanvas.getBoundingClientRect().y) * precanvasHeightZoom + rerouteWidth;\r\n            let x = eX;\r\n            let y = eY;\r\n            /*\r\n            var curvature = reroute_curvature;\r\n            var hx1 = line_x + Math.abs(x - line_x) * curvature;\r\n            var hx2 = x - Math.abs(x - line_x) * curvature;\r\n            linecurve += ' M '+ line_x +' '+ line_y +' C '+ hx1 +' '+ line_y +' '+ hx2 +' ' + y +' ' + x +'  ' + y;\r\n            */\r\n            let lineCurveSearch = createCurvature(line_x, line_y, x, y, reroute_curvature, 'other');\r\n            linecurve += lineCurveSearch;\r\n            reoute_fix.push(lineCurveSearch);\r\n          }\r\n\r\n        });\r\n        if(reroute_fix_curvature) {\r\n          reoute_fix.forEach((itempath, i) => {\r\n            elems[item].children[i].setAttributeNS(null, 'd', itempath);\r\n          });\r\n\r\n        } else {\r\n          elems[item].children[0].setAttributeNS(null, 'd', linecurve);\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  dblclick(e) {\r\n    if(this.connection_selected != null && this.reroute) {\r\n      this.createReroutePoint(this.connection_selected);\r\n    }\r\n\r\n    if(e.target.classList[0] === 'point') {\r\n      this.removeReroutePoint(e.target);\r\n    }\r\n  }\r\n\r\n  createReroutePoint(ele) {\r\n    this.connection_selected.classList.remove(\"selected\");\r\n    const nodeUpdate = this.connection_selected.parentElement.classList[2].slice(9);\r\n    const nodeUpdateIn = this.connection_selected.parentElement.classList[1].slice(13);\r\n    const output_class = this.connection_selected.parentElement.classList[3];\r\n    const input_class = this.connection_selected.parentElement.classList[4];\r\n    this.connection_selected = null;\r\n    const point = document.createElementNS('http://www.w3.org/2000/svg', \"circle\");\r\n    point.classList.add(\"point\");\r\n    var pos_x = this.pos_x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)) - (this.precanvas.getBoundingClientRect().x * (this.precanvas.clientWidth / (this.precanvas.clientWidth * this.zoom)));\r\n    var pos_y = this.pos_y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)) - (this.precanvas.getBoundingClientRect().y * (this.precanvas.clientHeight / (this.precanvas.clientHeight * this.zoom)));\r\n\r\n    point.setAttributeNS(null, 'cx', pos_x);\r\n    point.setAttributeNS(null, 'cy', pos_y);\r\n    point.setAttributeNS(null, 'r', this.reroute_width);\r\n\r\n    let position_add_array_point = 0;\r\n    if(this.reroute_fix_curvature) {\r\n\r\n      const numberPoints = ele.parentElement.querySelectorAll(\".main-path\").length;\r\n      var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n      path.classList.add(\"main-path\");\r\n      path.setAttributeNS(null, 'd', '');\r\n\r\n      ele.parentElement.insertBefore(path, ele.parentElement.children[numberPoints]);\r\n      if(numberPoints === 1) {\r\n        ele.parentElement.appendChild(point);\r\n      } else {\r\n        const search_point = Array.from(ele.parentElement.children).indexOf(ele);\r\n        position_add_array_point = search_point;\r\n        ele.parentElement.insertBefore(point, ele.parentElement.children[search_point + numberPoints + 1]);\r\n      }\r\n    } else {\r\n      ele.parentElement.appendChild(point);\r\n    }\r\n\r\n    const nodeId = nodeUpdate.slice(5);\r\n    const searchConnection = this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections.findIndex(function(item, i) {\r\n      return item.node === nodeUpdateIn && item.output === input_class;\r\n    });\r\n\r\n    if(this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points === undefined) {\r\n      this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points = [];\r\n    }\r\n    //this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.push({ pos_x: pos_x, pos_y: pos_y });\r\n\r\n    if(this.reroute_fix_curvature) {\r\n      //console.log(position_add_array_point)\r\n      if(position_add_array_point > 0) {\r\n        this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.splice(position_add_array_point, 0, { pos_x: pos_x, pos_y: pos_y });\r\n      } else {\r\n        this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.push({ pos_x: pos_x, pos_y: pos_y });\r\n      }\r\n\r\n      ele.parentElement.querySelectorAll(\".main-path\").forEach((item, i) => {\r\n        item.classList.remove(\"selected\");\r\n      });\r\n\r\n    } else {\r\n      this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.push({ pos_x: pos_x, pos_y: pos_y });\r\n    }\r\n\r\n    /*\r\n    this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.sort((a,b) => (a.pos_x > b.pos_x) ? 1 : (b.pos_x > a.pos_x ) ? -1 : 0 );\r\n    this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.forEach((item, i) => {\r\n\r\n        ele.parentElement.children[i+1].setAttributeNS(null, 'cx', item.pos_x);\r\n        ele.parentElement.children[i+1].setAttributeNS(null, 'cy', item.pos_y);\r\n    });*/\r\n\r\n    this.dispatch('addReroute', nodeId);\r\n    this.updateConnectionNodes(nodeUpdate);\r\n  }\r\n\r\n  removeReroutePoint(ele) {\r\n    const nodeUpdate = ele.parentElement.classList[2].slice(9);\r\n    const nodeUpdateIn = ele.parentElement.classList[1].slice(13);\r\n    const output_class = ele.parentElement.classList[3];\r\n    const input_class = ele.parentElement.classList[4];\r\n\r\n    let numberPointPosition = Array.from(ele.parentElement.children).indexOf(ele) - 1;\r\n\r\n    const nodeId = nodeUpdate.slice(5);\r\n    const searchConnection = this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections.findIndex(function(item, i) {\r\n      return item.node === nodeUpdateIn && item.output === input_class;\r\n    });\r\n\r\n    if(this.reroute_fix_curvature) {\r\n\r\n      const numberMainPath = ele.parentElement.querySelectorAll(\".main-path\").length;\r\n      ele.parentElement.children[numberMainPath - 1].remove();\r\n      numberPointPosition -= numberMainPath;\r\n      if(numberPointPosition < 0) {\r\n        numberPointPosition = 0;\r\n      }\r\n    }\r\n    //console.log(numberPointPosition);\r\n    this.drawflow.drawflow[this.module].data[nodeId].outputs[output_class].connections[searchConnection].points.splice(numberPointPosition, 1);\r\n\r\n    ele.remove();\r\n    this.dispatch('removeReroute', nodeId);\r\n    this.updateConnectionNodes(nodeUpdate);\r\n\r\n  }\r\n\r\n  registerNode(name, html, props = null, options = null) {\r\n    this.noderegister[name] = { html: html, props: props, options: options };\r\n  }\r\n\r\n  getNodeFromId(id) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    return JSON.parse(JSON.stringify(this.drawflow.drawflow[moduleName].data[id]));\r\n  }\r\n  getNodesFromName(name) {\r\n    var nodes = [];\r\n    const editor = this.drawflow.drawflow;\r\n    Object.keys(editor).map(function(moduleName, index) {\r\n      for(var node in editor[moduleName].data) {\r\n        if(editor[moduleName].data[node].name == name) {\r\n          nodes.push(editor[moduleName].data[node].id);\r\n        }\r\n      }\r\n    });\r\n    return nodes;\r\n  }\r\n\r\n  addNode(name, num_in, num_out, ele_pos_x, ele_pos_y, classoverride, data, html, typenode = false) {\r\n    let newNodeId;\r\n    if(this.useuuid) {\r\n      newNodeId = this.getUuid();\r\n    } else {\r\n      newNodeId = this.nodeId;\r\n    }\r\n    const parent = document.createElement('div');\r\n    parent.classList.add(\"parent-node\");\r\n\r\n    const node = document.createElement('div');\r\n    node.innerHTML = \"\";\r\n    node.setAttribute(\"id\", \"node-\" + newNodeId);\r\n    node.classList.add(\"drawflow-node\");\r\n    if(classoverride != '') {\r\n      node.classList.add(classoverride);\r\n    }\r\n\r\n    const inputs = document.createElement('div');\r\n    inputs.classList.add(\"inputs\");\r\n\r\n    const outputs = document.createElement('div');\r\n    outputs.classList.add(\"outputs\");\r\n\r\n    const json_inputs = {};\r\n    for(let x = 0; x < num_in; x++) {\r\n      const input = document.createElement('div');\r\n      input.classList.add(\"input\");\r\n      input.classList.add(\"input_\" + (x + 1));\r\n      json_inputs[\"input_\" + (x + 1)] = { \"connections\": [] };\r\n      inputs.appendChild(input);\r\n    }\r\n\r\n    const json_outputs = {};\r\n    for(let x = 0; x < num_out; x++) {\r\n      const output = document.createElement('div');\r\n      output.classList.add(\"output\");\r\n      output.classList.add(\"output_\" + (x + 1));\r\n      json_outputs[\"output_\" + (x + 1)] = { \"connections\": [] };\r\n      outputs.appendChild(output);\r\n    }\r\n\r\n    const content = document.createElement('div');\r\n    content.classList.add(\"drawflow_content_node\");\r\n    if(typenode === false) {\r\n      content.innerHTML = html;\r\n    } else if(typenode === true) {\r\n      content.appendChild(this.noderegister[html].html.cloneNode(true));\r\n    } else {\r\n      if(parseInt(this.render.version) === 3) {\r\n        //Vue 3\r\n        let wrapper = this.render.createApp({\r\n          render: h => this.render.h(this.noderegister[html].html, this.noderegister[html].props, this.noderegister[html].options)\r\n        }).mount(content);\r\n      } else {\r\n        // Vue 2\r\n        let wrapper = new this.render({\r\n          render: h => h(this.noderegister[html].html, { props: this.noderegister[html].props }),\r\n          ...this.noderegister[html].options\r\n        }).$mount();\r\n        //\r\n        content.appendChild(wrapper.$el);\r\n      }\r\n    }\r\n\r\n    Object.entries(data).forEach(function(key, value) {\r\n      if(typeof key[1] === \"object\") {\r\n        insertObjectkeys(null, key[0], key[0]);\r\n      } else {\r\n        var elems = content.querySelectorAll('[df-' + key[0] + ']');\r\n        for(var i = 0; i < elems.length; i++) {\r\n          elems[i].value = key[1];\r\n        }\r\n      }\r\n    });\r\n\r\n    function insertObjectkeys(object, name, completname) {\r\n      let objectData;\r\n      if(object === null) {\r\n        objectData = data[name];\r\n      } else {\r\n        objectData = object[name];\r\n      }\r\n      if(objectData !== null) {\r\n        Object.entries(objectData).forEach(function(key, value) {\r\n          if(typeof key[1] === \"object\") {\r\n            insertObjectkeys(objectData, key[0], completname + '-' + key[0]);\r\n          } else {\r\n            var elems = content.querySelectorAll('[df-' + completname + '-' + key[0] + ']');\r\n            for(var i = 0; i < elems.length; i++) {\r\n              elems[i].value = key[1];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    node.appendChild(inputs);\r\n    node.appendChild(content);\r\n    node.appendChild(outputs);\r\n    node.style.top = ele_pos_y + \"px\";\r\n    node.style.left = ele_pos_x + \"px\";\r\n    parent.appendChild(node);\r\n    this.precanvas.appendChild(parent);\r\n    var json = {\r\n      id: newNodeId,\r\n      name: name,\r\n      data: data,\r\n      class: classoverride,\r\n      html: html,\r\n      typenode: typenode,\r\n      inputs: json_inputs,\r\n      outputs: json_outputs,\r\n      pos_x: ele_pos_x,\r\n      pos_y: ele_pos_y,\r\n    };\r\n    this.drawflow.drawflow[this.module].data[newNodeId] = json;\r\n    this.dispatch('nodeCreated', newNodeId);\r\n    if(!this.useuuid) {\r\n      this.nodeId++;\r\n    }\r\n    return newNodeId;\r\n  }\r\n\r\n  addNodeImport(dataNode, precanvas) {\r\n    const parent = document.createElement('div');\r\n    parent.classList.add(\"parent-node\");\r\n\r\n    const node = document.createElement('div');\r\n    node.innerHTML = \"\";\r\n    node.setAttribute(\"id\", \"node-\" + dataNode.id);\r\n    node.classList.add(\"drawflow-node\");\r\n    if(dataNode.class != '') {\r\n      node.classList.add(dataNode.class);\r\n    }\r\n\r\n    const inputs = document.createElement('div');\r\n    inputs.classList.add(\"inputs\");\r\n\r\n    const outputs = document.createElement('div');\r\n    outputs.classList.add(\"outputs\");\r\n\r\n    Object.keys(dataNode.inputs).map(function(input_item, index) {\r\n      const input = document.createElement('div');\r\n      input.classList.add(\"input\");\r\n      input.classList.add(input_item);\r\n      inputs.appendChild(input);\r\n      Object.keys(dataNode.inputs[input_item].connections).map(function(output_item, index) {\r\n\r\n        var connection = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n        var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n        path.classList.add(\"main-path\");\r\n        path.setAttributeNS(null, 'd', '');\r\n        // path.innerHTML = 'a';\r\n        connection.classList.add(\"connection\");\r\n        connection.classList.add(\"node_in_node-\" + dataNode.id);\r\n        connection.classList.add(\"node_out_node-\" + dataNode.inputs[input_item].connections[output_item].node);\r\n        connection.classList.add(dataNode.inputs[input_item].connections[output_item].input);\r\n        connection.classList.add(input_item);\r\n\r\n        connection.appendChild(path);\r\n        precanvas.appendChild(connection);\r\n\r\n      });\r\n    });\r\n\r\n    for(var x = 0; x < Object.keys(dataNode.outputs).length; x++) {\r\n      const output = document.createElement('div');\r\n      output.classList.add(\"output\");\r\n      output.classList.add(\"output_\" + (x + 1));\r\n      outputs.appendChild(output);\r\n    }\r\n\r\n    const content = document.createElement('div');\r\n    content.classList.add(\"drawflow_content_node\");\r\n    //content.innerHTML = dataNode.html;\r\n\r\n    if(dataNode.typenode === false) {\r\n      content.innerHTML = dataNode.html;\r\n    } else if(dataNode.typenode === true) {\r\n      content.appendChild(this.noderegister[dataNode.html].html.cloneNode(true));\r\n    } else {\r\n      if(parseInt(this.render.version) === 3) {\r\n        //Vue 3\r\n        let wrapper = this.render.createApp({\r\n          render: h => this.render.h(this.noderegister[dataNode.html].html, this.noderegister[dataNode.html].props, this.noderegister[dataNode.html].options)\r\n        }).mount(content);\r\n      } else {\r\n        //Vue 2\r\n        let wrapper = new this.render({\r\n          render: h => h(this.noderegister[dataNode.html].html, { props: this.noderegister[dataNode.html].props }),\r\n          ...this.noderegister[dataNode.html].options\r\n        }).$mount();\r\n        content.appendChild(wrapper.$el);\r\n      }\r\n    }\r\n\r\n    Object.entries(dataNode.data).forEach(function(key, value) {\r\n      if(typeof key[1] === \"object\") {\r\n        insertObjectkeys(null, key[0], key[0]);\r\n      } else {\r\n        var elems = content.querySelectorAll('[df-' + key[0] + ']');\r\n        for(var i = 0; i < elems.length; i++) {\r\n          elems[i].value = key[1];\r\n        }\r\n      }\r\n    });\r\n\r\n    function insertObjectkeys(object, name, completname) {\r\n      let objectData;\r\n      if(object === null) {\r\n        objectData = dataNode.data[name];\r\n      } else {\r\n        objectData = object[name];\r\n      }\r\n      if(objectData !== null) {\r\n        Object.entries(objectData).forEach(function(key, value) {\r\n          if(typeof key[1] === \"object\") {\r\n            insertObjectkeys(objectData, key[0], completname + '-' + key[0]);\r\n          } else {\r\n            var elems = content.querySelectorAll('[df-' + completname + '-' + key[0] + ']');\r\n            for(var i = 0; i < elems.length; i++) {\r\n              elems[i].value = key[1];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    node.appendChild(inputs);\r\n    node.appendChild(content);\r\n    node.appendChild(outputs);\r\n    node.style.top = dataNode.pos_y + \"px\";\r\n    node.style.left = dataNode.pos_x + \"px\";\r\n    parent.appendChild(node);\r\n    this.precanvas.appendChild(parent);\r\n  }\r\n\r\n  addRerouteImport(dataNode) {\r\n    const reroute_width = this.reroute_width;\r\n    const reroute_fix_curvature = this.reroute_fix_curvature;\r\n\r\n    Object.keys(dataNode.outputs).map(function(output_item, index) {\r\n      Object.keys(dataNode.outputs[output_item].connections).map(function(input_item, index) {\r\n        const points = dataNode.outputs[output_item].connections[input_item].points;\r\n        if(points !== undefined) {\r\n\r\n          points.forEach((item, i) => {\r\n            const input_id = dataNode.outputs[output_item].connections[input_item].node;\r\n            const input_class = dataNode.outputs[output_item].connections[input_item].output;\r\n            //console.log('.connection.node_in_'+input_id+'.node_out_'+dataNode.id+'.'+output_item+'.'+input_class);\r\n            const ele = document.querySelector('.connection.node_in_node-' + input_id + '.node_out_node-' + dataNode.id + '.' + output_item + '.' + input_class);\r\n\r\n            if(reroute_fix_curvature) {\r\n              if(i === 0) {\r\n                for(var z = 0; z < points.length; z++) {\r\n                  var path = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n                  path.classList.add(\"main-path\");\r\n                  path.setAttributeNS(null, 'd', '');\r\n                  ele.appendChild(path);\r\n\r\n                }\r\n              }\r\n            }\r\n\r\n            const point = document.createElementNS('http://www.w3.org/2000/svg', \"circle\");\r\n            point.classList.add(\"point\");\r\n            var pos_x = item.pos_x;\r\n            var pos_y = item.pos_y;\r\n\r\n            point.setAttributeNS(null, 'cx', pos_x);\r\n            point.setAttributeNS(null, 'cy', pos_y);\r\n            point.setAttributeNS(null, 'r', reroute_width);\r\n\r\n            ele.appendChild(point);\r\n\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  updateNodeValue(event) {\r\n    var attr = event.target.attributes;\r\n    for(var i = 0; i < attr.length; i++) {\r\n      if(attr[i].nodeName.startsWith('df-')) {\r\n        var keys = attr[i].nodeName.slice(3).split(\"-\");\r\n        var target = this.drawflow.drawflow[this.module].data[event.target.closest(\".drawflow_content_node\").parentElement.id.slice(5)].data;\r\n        for(var index = 0; index < keys.length - 1; index += 1) {\r\n          if(target[keys[index]] == null) {\r\n            target[keys[index]] = {};\r\n          }\r\n          target = target[keys[index]];\r\n        }\r\n        target[keys[keys.length - 1]] = event.target.value;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateNodeDataFromId(id, data) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    this.drawflow.drawflow[moduleName].data[id].data = data;\r\n    if(this.module === moduleName) {\r\n      const content = document.querySelector('#node-' + id);\r\n\r\n      let insertObjectkeys = function(object, name, completname) {\r\n        // function insertObjectkeys(object, name, completname) {\r\n        let objectData;\r\n        if(object === null) {\r\n          objectData = data[name];\r\n        } else {\r\n          objectData = object[name];\r\n        }\r\n\r\n        if(objectData !== null) {\r\n          Object.entries(objectData).forEach(function(key, value) {\r\n            if(typeof key[1] === \"object\") {\r\n              insertObjectkeys(objectData, key[0], completname + '-' + key[0]);\r\n            } else {\r\n              var elems = content.querySelectorAll('[df-' + completname + '-' + key[0] + ']');\r\n              for(var i = 0; i < elems.length; i++) {\r\n                elems[i].value = key[1];\r\n              }\r\n            }\r\n          });\r\n        }\r\n      };\r\n\r\n      Object.entries(data).forEach(function(key, value) {\r\n        if(typeof key[1] === \"object\") {\r\n          insertObjectkeys(null, key[0], key[0]);\r\n        } else {\r\n          var elems = content.querySelectorAll('[df-' + key[0] + ']');\r\n          for(var i = 0; i < elems.length; i++) {\r\n            elems[i].value = key[1];\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addNodeInput(id) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    const infoNode = this.getNodeFromId(id);\r\n    const numInputs = Object.keys(infoNode.inputs).length;\r\n    if(this.module === moduleName) {\r\n      //Draw input\r\n      const input = document.createElement('div');\r\n      input.classList.add(\"input\");\r\n      input.classList.add(\"input_\" + (numInputs + 1));\r\n      const parent = document.querySelector('#node-' + id + ' .inputs');\r\n      parent.appendChild(input);\r\n      this.updateConnectionNodes('node-' + id);\r\n\r\n    }\r\n    this.drawflow.drawflow[moduleName].data[id].inputs[\"input_\" + (numInputs + 1)] = { \"connections\": [] };\r\n  }\r\n\r\n  addNodeOutput(id) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    const infoNode = this.getNodeFromId(id);\r\n    const numOutputs = Object.keys(infoNode.outputs).length;\r\n    if(this.module === moduleName) {\r\n      //Draw output\r\n      const output = document.createElement('div');\r\n      output.classList.add(\"output\");\r\n      output.classList.add(\"output_\" + (numOutputs + 1));\r\n      const parent = document.querySelector('#node-' + id + ' .outputs');\r\n      parent.appendChild(output);\r\n      this.updateConnectionNodes('node-' + id);\r\n\r\n    }\r\n    this.drawflow.drawflow[moduleName].data[id].outputs[\"output_\" + (numOutputs + 1)] = { \"connections\": [] };\r\n  }\r\n\r\n  removeNodeInput(id, input_class) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    const infoNode = this.getNodeFromId(id);\r\n    if(this.module === moduleName) {\r\n      document.querySelector('#node-' + id + ' .inputs .input.' + input_class).remove();\r\n    }\r\n    const removeInputs = [];\r\n    Object.keys(infoNode.inputs[input_class].connections).map(function(key, index) {\r\n      const id_output = infoNode.inputs[input_class].connections[index].node;\r\n      const output_class = infoNode.inputs[input_class].connections[index].input;\r\n      removeInputs.push({ id_output, id, output_class, input_class });\r\n    });\r\n    // Remove connections\r\n    removeInputs.forEach((item, i) => {\r\n      this.removeSingleConnection(item.id_output, item.id, item.output_class, item.input_class);\r\n    });\r\n\r\n    delete this.drawflow.drawflow[moduleName].data[id].inputs[input_class];\r\n\r\n    // Update connection\r\n    const connections = [];\r\n    const connectionsInputs = this.drawflow.drawflow[moduleName].data[id].inputs;\r\n    Object.keys(connectionsInputs).map(function(key, index) {\r\n      connections.push(connectionsInputs[key]);\r\n    });\r\n    this.drawflow.drawflow[moduleName].data[id].inputs = {};\r\n    const input_class_id = input_class.slice(6);\r\n    let nodeUpdates = [];\r\n    connections.forEach((item, i) => {\r\n      item.connections.forEach((itemx, f) => {\r\n        nodeUpdates.push(itemx);\r\n      });\r\n      this.drawflow.drawflow[moduleName].data[id].inputs['input_' + (i + 1)] = item;\r\n    });\r\n    nodeUpdates = new Set(nodeUpdates.map(e => JSON.stringify(e)));\r\n    nodeUpdates = Array.from(nodeUpdates).map(e => JSON.parse(e));\r\n\r\n    if(this.module === moduleName) {\r\n      const eles = document.querySelectorAll(\"#node-\" + id + \" .inputs .input\");\r\n      eles.forEach((item, i) => {\r\n        const id_class = item.classList[1].slice(6);\r\n        if(parseInt(input_class_id) < parseInt(id_class)) {\r\n          item.classList.remove('input_' + id_class);\r\n          item.classList.add('input_' + (id_class - 1));\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    nodeUpdates.forEach((itemx, i) => {\r\n      this.drawflow.drawflow[moduleName].data[itemx.node].outputs[itemx.input].connections.forEach((itemz, g) => {\r\n        if(itemz.node == id) {\r\n          const output_id = itemz.output.slice(6);\r\n          if(parseInt(input_class_id) < parseInt(output_id)) {\r\n            if(this.module === moduleName) {\r\n              const ele = document.querySelector(\".connection.node_in_node-\" + id + \".node_out_node-\" + itemx.node + \".\" + itemx.input + \".input_\" + output_id);\r\n              ele.classList.remove('input_' + output_id);\r\n              ele.classList.add('input_' + (output_id - 1));\r\n            }\r\n            if(itemz.points) {\r\n              this.drawflow.drawflow[moduleName].data[itemx.node].outputs[itemx.input].connections[g] = { node: itemz.node, output: 'input_' + (output_id - 1), points: itemz.points };\r\n            } else {\r\n              this.drawflow.drawflow[moduleName].data[itemx.node].outputs[itemx.input].connections[g] = { node: itemz.node, output: 'input_' + (output_id - 1) };\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n    this.updateConnectionNodes('node-' + id);\r\n  }\r\n\r\n  removeNodeOutput(id, output_class) {\r\n    var moduleName = this.getModuleFromNodeId(id);\r\n    const infoNode = this.getNodeFromId(id);\r\n    if(this.module === moduleName) {\r\n      document.querySelector('#node-' + id + ' .outputs .output.' + output_class).remove();\r\n    }\r\n    const removeOutputs = [];\r\n    Object.keys(infoNode.outputs[output_class].connections).map(function(key, index) {\r\n      const id_input = infoNode.outputs[output_class].connections[index].node;\r\n      const input_class = infoNode.outputs[output_class].connections[index].output;\r\n      removeOutputs.push({ id, id_input, output_class, input_class });\r\n    });\r\n    // Remove connections\r\n    removeOutputs.forEach((item, i) => {\r\n      this.removeSingleConnection(item.id, item.id_input, item.output_class, item.input_class);\r\n    });\r\n\r\n    delete this.drawflow.drawflow[moduleName].data[id].outputs[output_class];\r\n\r\n    // Update connection\r\n    const connections = [];\r\n    const connectionsOuputs = this.drawflow.drawflow[moduleName].data[id].outputs;\r\n    Object.keys(connectionsOuputs).map(function(key, index) {\r\n      connections.push(connectionsOuputs[key]);\r\n    });\r\n    this.drawflow.drawflow[moduleName].data[id].outputs = {};\r\n    const output_class_id = output_class.slice(7);\r\n    let nodeUpdates = [];\r\n    connections.forEach((item, i) => {\r\n      item.connections.forEach((itemx, f) => {\r\n        nodeUpdates.push({ node: itemx.node, output: itemx.output });\r\n      });\r\n      this.drawflow.drawflow[moduleName].data[id].outputs['output_' + (i + 1)] = item;\r\n    });\r\n    nodeUpdates = new Set(nodeUpdates.map(e => JSON.stringify(e)));\r\n    nodeUpdates = Array.from(nodeUpdates).map(e => JSON.parse(e));\r\n\r\n    if(this.module === moduleName) {\r\n      const eles = document.querySelectorAll(\"#node-\" + id + \" .outputs .output\");\r\n      eles.forEach((item, i) => {\r\n        const id_class = item.classList[1].slice(7);\r\n        if(parseInt(output_class_id) < parseInt(id_class)) {\r\n          item.classList.remove('output_' + id_class);\r\n          item.classList.add('output_' + (id_class - 1));\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    nodeUpdates.forEach((itemx, i) => {\r\n      this.drawflow.drawflow[moduleName].data[itemx.node].inputs[itemx.output].connections.forEach((itemz, g) => {\r\n        if(itemz.node == id) {\r\n          const input_id = itemz.input.slice(7);\r\n          if(parseInt(output_class_id) < parseInt(input_id)) {\r\n            if(this.module === moduleName) {\r\n\r\n              const ele = document.querySelector(\".connection.node_in_node-\" + itemx.node + \".node_out_node-\" + id + \".output_\" + input_id + \".\" + itemx.output);\r\n              ele.classList.remove('output_' + input_id);\r\n              ele.classList.remove(itemx.output);\r\n              ele.classList.add('output_' + (input_id - 1));\r\n              ele.classList.add(itemx.output);\r\n            }\r\n            if(itemz.points) {\r\n              this.drawflow.drawflow[moduleName].data[itemx.node].inputs[itemx.output].connections[g] = { node: itemz.node, input: 'output_' + (input_id - 1), points: itemz.points };\r\n            } else {\r\n              this.drawflow.drawflow[moduleName].data[itemx.node].inputs[itemx.output].connections[g] = { node: itemz.node, input: 'output_' + (input_id - 1) };\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    this.updateConnectionNodes('node-' + id);\r\n  }\r\n\r\n  removeNodeId(id) {\r\n    this.removeConnectionNodeId(id);\r\n    var moduleName = this.getModuleFromNodeId(id.slice(5));\r\n    if(this.module === moduleName) {\r\n      this.container.querySelector(`#${id}`).remove();\r\n    }\r\n    delete this.drawflow.drawflow[moduleName].data[id.slice(5)];\r\n    this.dispatch('nodeRemoved', id.slice(5));\r\n  }\r\n\r\n  removeConnection() {\r\n    if(this.connection_selected != null) {\r\n      var listclass = this.connection_selected.parentElement.classList;\r\n      this.connection_selected.parentElement.remove();\r\n      //console.log(listclass);\r\n      var index_out = this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[1].slice(13) && item.output === listclass[4];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.splice(index_out, 1);\r\n\r\n      var index_in = this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[2].slice(14) && item.input === listclass[3];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.splice(index_in, 1);\r\n      this.dispatch('connectionRemoved', { output_id: listclass[2].slice(14), input_id: listclass[1].slice(13), output_class: listclass[3], input_class: listclass[4] });\r\n      this.connection_selected = null;\r\n    }\r\n  }\r\n\r\n  removeSingleConnection(id_output, id_input, output_class, input_class) {\r\n    var nodeOneModule = this.getModuleFromNodeId(id_output);\r\n    var nodeTwoModule = this.getModuleFromNodeId(id_input);\r\n    if(nodeOneModule === nodeTwoModule) {\r\n      // Check nodes in same module.\r\n\r\n      // Check connection exist\r\n      var exists = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function(item, i) {\r\n        return item.node == id_input && item.output === input_class;\r\n      });\r\n      if(exists > -1) {\r\n\r\n        if(this.module === nodeOneModule) {\r\n          // In same module with view.\r\n          document.querySelector('.connection.node_in_node-' + id_input + '.node_out_node-' + id_output + '.' + output_class + '.' + input_class).remove();\r\n        }\r\n\r\n        var index_out = this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.findIndex(function(item, i) {\r\n          return item.node == id_input && item.output === input_class;\r\n        });\r\n        this.drawflow.drawflow[nodeOneModule].data[id_output].outputs[output_class].connections.splice(index_out, 1);\r\n\r\n        var index_in = this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.findIndex(function(item, i) {\r\n          return item.node == id_output && item.input === output_class;\r\n        });\r\n        this.drawflow.drawflow[nodeOneModule].data[id_input].inputs[input_class].connections.splice(index_in, 1);\r\n\r\n        this.dispatch('connectionRemoved', { output_id: id_output, input_id: id_input, output_class: output_class, input_class: input_class });\r\n        return true;\r\n\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  removeConnectionNodeId(id) {\r\n    const idSearchIn = 'node_in_' + id;\r\n    const idSearchOut = 'node_out_' + id;\r\n\r\n    const elemsOut = this.container.querySelectorAll(`.${idSearchOut}`);\r\n    for(let i = elemsOut.length - 1; i >= 0; i--) {\r\n      const listclass = elemsOut[i].classList;\r\n\r\n      const index_in = this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[2].slice(14) && item.input === listclass[3];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.splice(index_in, 1);\r\n\r\n      const index_out = this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[1].slice(13) && item.output === listclass[4];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.splice(index_out, 1);\r\n\r\n      elemsOut[i].remove();\r\n\r\n      this.dispatch('connectionRemoved', { output_id: listclass[2].slice(14), input_id: listclass[1].slice(13), output_class: listclass[3], input_class: listclass[4] });\r\n    }\r\n\r\n    const elemsIn = this.container.querySelectorAll(`.${idSearchIn}`);\r\n    for(let i = elemsIn.length - 1; i >= 0; i--) {\r\n\r\n      const listclass = elemsIn[i].classList;\r\n\r\n      const index_out = this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[1].slice(13) && item.output === listclass[4];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[2].slice(14)].outputs[listclass[3]].connections.splice(index_out, 1);\r\n\r\n      const index_in = this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.findIndex(function(item, i) {\r\n        return item.node === listclass[2].slice(14) && item.input === listclass[3];\r\n      });\r\n      this.drawflow.drawflow[this.module].data[listclass[1].slice(13)].inputs[listclass[4]].connections.splice(index_in, 1);\r\n\r\n      elemsIn[i].remove();\r\n\r\n      this.dispatch('connectionRemoved', { output_id: listclass[2].slice(14), input_id: listclass[1].slice(13), output_class: listclass[3], input_class: listclass[4] });\r\n    }\r\n  }\r\n\r\n  getModuleFromNodeId(id) {\r\n    var nameModule;\r\n    const editor = this.drawflow.drawflow;\r\n    Object.keys(editor).map(function(moduleName, index) {\r\n      Object.keys(editor[moduleName].data).map(function(node, index2) {\r\n        if(node == id) {\r\n          nameModule = moduleName;\r\n        }\r\n      });\r\n    });\r\n    return nameModule;\r\n  }\r\n\r\n  addModule(name) {\r\n    this.drawflow.drawflow[name] = { \"data\": {} };\r\n    this.dispatch('moduleCreated', name);\r\n  }\r\n  changeModule(name) {\r\n    this.dispatch('moduleChanged', name);\r\n    this.module = name;\r\n    this.precanvas.innerHTML = \"\";\r\n    this.canvas_x = 0;\r\n    this.canvas_y = 0;\r\n    this.pos_x = 0;\r\n    this.pos_y = 0;\r\n    this.mouse_x = 0;\r\n    this.mouse_y = 0;\r\n    this.zoom = 1;\r\n    this.zoom_last_value = 1;\r\n    this.precanvas.style.transform = '';\r\n    this.import(this.drawflow);\r\n  }\r\n\r\n  removeModule(name) {\r\n    if(this.module === name) {\r\n      this.changeModule('Home');\r\n    }\r\n    delete this.drawflow.drawflow[name];\r\n    this.dispatch('moduleRemoved', name);\r\n  }\r\n\r\n  clearModuleSelected() {\r\n    this.precanvas.innerHTML = \"\";\r\n    this.drawflow.drawflow[this.module] = { \"data\": {} };\r\n  }\r\n\r\n  clear() {\r\n    this.precanvas.innerHTML = \"\";\r\n    this.drawflow = { \"drawflow\": { \"Home\": { \"data\": {} } } };\r\n  }\r\n\r\n  export() {\r\n    // const dataExport = JSON.parse(JSON.stringify(this.drawflow));\r\n    const dataExport = { ...this.drawflow };\r\n    this.dispatch('export', dataExport);\r\n    return dataExport;\r\n  }\r\n\r\n  import(data) {\r\n    this.clear();\r\n    // this.drawflow = JSON.parse(JSON.stringify(data));\r\n    this.drawflow = { ...data };\r\n    this.load();\r\n    this.dispatch('import', 'import');\r\n  }\r\n\r\n  /* Events */\r\n  on(event, callback) {\r\n    // Check if the callback is not a function\r\n    if(typeof callback !== 'function') {\r\n      console.error(`The listener callback must be a function, the given type is ${typeof callback}`);\r\n      return false;\r\n    }\r\n\r\n    // Check if the event is not a string\r\n    if(typeof event !== 'string') {\r\n      console.error(`The event name must be a string, the given type is ${typeof event}`);\r\n      return false;\r\n    }\r\n\r\n    // Check if this event not exists\r\n    if(this.events[event] === undefined) {\r\n      this.events[event] = {\r\n        listeners: []\r\n      };\r\n    }\r\n\r\n    this.events[event].listeners.push(callback);\r\n  }\r\n\r\n  removeListener(event, callback) {\r\n    // Check if this event not exists\r\n    if(this.events[event] === undefined) {\r\n      //console.error(`This event: ${event} does not exist`);\r\n      return false;\r\n    }\r\n\r\n    this.events[event].listeners = this.events[event].listeners.filter(listener => {\r\n      return listener.toString() !== callback.toString();\r\n    });\r\n  }\r\n\r\n  dispatch(event, details) {\r\n    // Check if this event not exists\r\n    if(this.events[event] === undefined) {\r\n      // console.error(`This event: ${event} does not exist`);\r\n      return false;\r\n    }\r\n\r\n    this.events[event].listeners.forEach((listener) => {\r\n      listener(details);\r\n    });\r\n  }\r\n\r\n  getUuid() {\r\n    // http://www.ietf.org/rfc/rfc4122.txt\r\n    var s = [];\r\n    var hexDigits = \"0123456789abcdef\";\r\n    for(var i = 0; i < 36; i++) {\r\n      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n    }\r\n    s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\r\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n    s[8] = s[13] = s[18] = s[23] = \"-\";\r\n\r\n    var uuid = s.join(\"\");\r\n    return uuid;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}